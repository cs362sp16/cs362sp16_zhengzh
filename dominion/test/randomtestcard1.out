Begin Test 0: 
Failed to draw 3 cards, test fails
Begin Test 1: 
Failed to draw 3 cards, test fails
Begin Test 2: 
Failed to draw 3 cards, test fails
Begin Test 3: 
Failed to draw 3 cards, test fails
Begin Test 4: 
Failed to draw 3 cards, test fails
Begin Test 5: 
Failed to draw 3 cards, test fails
Begin Test 6: 
Failed to draw 3 cards, test fails
Begin Test 7: 
Failed to draw 3 cards, test fails
Begin Test 8: 
Failed to draw 3 cards, test fails
Begin Test 9: 
Failed to draw 3 cards, test fails
Begin Test 10: 
Failed to draw 3 cards, test fails
Begin Test 11: 
Failed to draw 3 cards, test fails
Begin Test 12: 
Failed to draw 3 cards, test fails
Begin Test 13: 
Failed to draw 3 cards, test fails
Begin Test 14: 
Failed to draw 3 cards, test fails
Begin Test 15: 
Failed to draw 3 cards, test fails
Begin Test 16: 
Failed to draw 3 cards, test fails
Begin Test 17: 
Failed to draw 3 cards, test fails
Begin Test 18: 
Failed to draw 3 cards, test fails
Begin Test 19: 
Failed to draw 3 cards, test fails
Begin Test 20: 
Failed to draw 3 cards, test fails
Begin Test 21: 
Failed to draw 3 cards, test fails
Begin Test 22: 
Failed to draw 3 cards, test fails
Begin Test 23: 
Failed to draw 3 cards, test fails
Begin Test 24: 
Failed to draw 3 cards, test fails
Begin Test 25: 
Failed to draw 3 cards, test fails
Begin Test 26: 
Failed to draw 3 cards, test fails
Begin Test 27: 
Failed to draw 3 cards, test fails
Begin Test 28: 
Failed to draw 3 cards, test fails
Begin Test 29: 
Failed to draw 3 cards, test fails
Begin Test 30: 
Failed to draw 3 cards, test fails
Begin Test 31: 
Failed to draw 3 cards, test fails
Begin Test 32: 
Failed to draw 3 cards, test fails
Begin Test 33: 
Failed to draw 3 cards, test fails
Begin Test 34: 
Failed to draw 3 cards, test fails
Begin Test 35: 
Failed to draw 3 cards, test fails
Begin Test 36: 
Failed to draw 3 cards, test fails
Begin Test 37: 
Failed to draw 3 cards, test fails
Begin Test 38: 
Failed to draw 3 cards, test fails
Begin Test 39: 
Failed to draw 3 cards, test fails
Begin Test 40: 
Failed to draw 3 cards, test fails
Begin Test 41: 
Failed to draw 3 cards, test fails
Begin Test 42: 
Failed to draw 3 cards, test fails
Begin Test 43: 
Failed to draw 3 cards, test fails
Begin Test 44: 
Failed to draw 3 cards, test fails
Begin Test 45: 
Failed to draw 3 cards, test fails
Begin Test 46: 
Failed to draw 3 cards, test fails
Begin Test 47: 
Failed to draw 3 cards, test fails
Begin Test 48: 
Failed to draw 3 cards, test fails
Begin Test 49: 
Failed to draw 3 cards, test fails
Begin Test 50: 
Failed to draw 3 cards, test fails
Begin Test 51: 
Failed to draw 3 cards, test fails
Begin Test 52: 
Failed to draw 3 cards, test fails
Begin Test 53: 
Failed to draw 3 cards, test fails
Begin Test 54: 
Failed to draw 3 cards, test fails
Begin Test 55: 
Failed to draw 3 cards, test fails
Begin Test 56: 
Failed to draw 3 cards, test fails
Begin Test 57: 
Failed to draw 3 cards, test fails
Begin Test 58: 
Failed to draw 3 cards, test fails
Begin Test 59: 
Failed to draw 3 cards, test fails
Begin Test 60: 
Failed to draw 3 cards, test fails
Begin Test 61: 
Failed to draw 3 cards, test fails
Begin Test 62: 
Failed to draw 3 cards, test fails
Begin Test 63: 
Failed to draw 3 cards, test fails
Begin Test 64: 
Failed to draw 3 cards, test fails
Begin Test 65: 
Failed to draw 3 cards, test fails
Begin Test 66: 
Failed to draw 3 cards, test fails
Begin Test 67: 
Failed to draw 3 cards, test fails
Begin Test 68: 
Failed to draw 3 cards, test fails
Begin Test 69: 
Failed to draw 3 cards, test fails
Begin Test 70: 
Failed to draw 3 cards, test fails
Begin Test 71: 
Failed to draw 3 cards, test fails
Begin Test 72: 
Failed to draw 3 cards, test fails
Begin Test 73: 
Failed to draw 3 cards, test fails
Begin Test 74: 
Failed to draw 3 cards, test fails
Begin Test 75: 
Failed to draw 3 cards, test fails
Begin Test 76: 
Failed to draw 3 cards, test fails
Begin Test 77: 
Failed to draw 3 cards, test fails
Begin Test 78: 
Failed to draw 3 cards, test fails
Begin Test 79: 
Failed to draw 3 cards, test fails
Begin Test 80: 
Failed to draw 3 cards, test fails
Begin Test 81: 
Failed to draw 3 cards, test fails
Begin Test 82: 
Failed to draw 3 cards, test fails
Begin Test 83: 
Failed to draw 3 cards, test fails
Begin Test 84: 
Failed to draw 3 cards, test fails
Begin Test 85: 
Failed to draw 3 cards, test fails
Begin Test 86: 
Failed to draw 3 cards, test fails
Begin Test 87: 
Failed to draw 3 cards, test fails
Begin Test 88: 
Failed to draw 3 cards, test fails
Begin Test 89: 
Failed to draw 3 cards, test fails
Begin Test 90: 
Failed to draw 3 cards, test fails
Begin Test 91: 
Failed to draw 3 cards, test fails
Begin Test 92: 
Failed to draw 3 cards, test fails
Begin Test 93: 
Failed to draw 3 cards, test fails
Begin Test 94: 
Failed to draw 3 cards, test fails
Begin Test 95: 
Failed to draw 3 cards, test fails
Begin Test 96: 
Failed to draw 3 cards, test fails
Begin Test 97: 
Failed to draw 3 cards, test fails
Begin Test 98: 
Failed to draw 3 cards, test fails
Begin Test 99: 
Failed to draw 3 cards, test fails
Begin Test 100: 
Failed to draw 3 cards, test fails
Begin Test 101: 
Failed to draw 3 cards, test fails
Begin Test 102: 
Failed to draw 3 cards, test fails
Begin Test 103: 
Failed to draw 3 cards, test fails
Begin Test 104: 
Failed to draw 3 cards, test fails
Begin Test 105: 
Failed to draw 3 cards, test fails
Begin Test 106: 
Failed to draw 3 cards, test fails
Begin Test 107: 
Failed to draw 3 cards, test fails
Begin Test 108: 
Failed to draw 3 cards, test fails
Begin Test 109: 
Failed to draw 3 cards, test fails
Begin Test 110: 
Failed to draw 3 cards, test fails
Begin Test 111: 
Failed to draw 3 cards, test fails
Begin Test 112: 
Failed to draw 3 cards, test fails
Begin Test 113: 
Failed to draw 3 cards, test fails
Begin Test 114: 
Failed to draw 3 cards, test fails
Begin Test 115: 
Failed to draw 3 cards, test fails
Begin Test 116: 
Failed to draw 3 cards, test fails
Begin Test 117: 
Failed to draw 3 cards, test fails
Begin Test 118: 
Failed to draw 3 cards, test fails
Begin Test 119: 
Failed to draw 3 cards, test fails
Begin Test 120: 
Failed to draw 3 cards, test fails
Begin Test 121: 
Failed to draw 3 cards, test fails
Begin Test 122: 
Failed to draw 3 cards, test fails
Begin Test 123: 
Failed to draw 3 cards, test fails
Begin Test 124: 
Failed to draw 3 cards, test fails
Begin Test 125: 
Failed to draw 3 cards, test fails
Begin Test 126: 
Failed to draw 3 cards, test fails
Begin Test 127: 
Failed to draw 3 cards, test fails
Begin Test 128: 
Failed to draw 3 cards, test fails
Begin Test 129: 
Failed to draw 3 cards, test fails
Begin Test 130: 
Failed to draw 3 cards, test fails
Begin Test 131: 
Failed to draw 3 cards, test fails
Begin Test 132: 
Failed to draw 3 cards, test fails
Begin Test 133: 
Failed to draw 3 cards, test fails
Begin Test 134: 
Failed to draw 3 cards, test fails
Begin Test 135: 
Failed to draw 3 cards, test fails
Begin Test 136: 
Failed to draw 3 cards, test fails
Begin Test 137: 
Failed to draw 3 cards, test fails
Begin Test 138: 
Failed to draw 3 cards, test fails
Begin Test 139: 
Failed to draw 3 cards, test fails
Begin Test 140: 
Failed to draw 3 cards, test fails
Begin Test 141: 
Failed to draw 3 cards, test fails
Begin Test 142: 
Failed to draw 3 cards, test fails
Begin Test 143: 
Failed to draw 3 cards, test fails
Begin Test 144: 
Failed to draw 3 cards, test fails
Begin Test 145: 
Failed to draw 3 cards, test fails
Begin Test 146: 
Failed to draw 3 cards, test fails
Begin Test 147: 
Failed to draw 3 cards, test fails
Begin Test 148: 
Failed to draw 3 cards, test fails
Begin Test 149: 
Failed to draw 3 cards, test fails
Begin Test 150: 
Failed to draw 3 cards, test fails
Begin Test 151: 
Failed to draw 3 cards, test fails
Begin Test 152: 
Failed to draw 3 cards, test fails
Begin Test 153: 
Failed to draw 3 cards, test fails
Begin Test 154: 
Failed to draw 3 cards, test fails
Begin Test 155: 
Failed to draw 3 cards, test fails
Begin Test 156: 
Failed to draw 3 cards, test fails
Begin Test 157: 
Failed to draw 3 cards, test fails
Begin Test 158: 
Failed to draw 3 cards, test fails
Begin Test 159: 
Failed to draw 3 cards, test fails
Begin Test 160: 
Failed to draw 3 cards, test fails
Begin Test 161: 
Failed to draw 3 cards, test fails
Begin Test 162: 
Failed to draw 3 cards, test fails
Begin Test 163: 
Failed to draw 3 cards, test fails
Begin Test 164: 
Failed to draw 3 cards, test fails
Begin Test 165: 
Failed to draw 3 cards, test fails
Begin Test 166: 
Failed to draw 3 cards, test fails
Begin Test 167: 
Failed to draw 3 cards, test fails
Begin Test 168: 
Failed to draw 3 cards, test fails
Begin Test 169: 
Failed to draw 3 cards, test fails
Begin Test 170: 
Failed to draw 3 cards, test fails
Begin Test 171: 
Failed to draw 3 cards, test fails
Begin Test 172: 
Failed to draw 3 cards, test fails
Begin Test 173: 
Failed to draw 3 cards, test fails
Begin Test 174: 
Failed to draw 3 cards, test fails
Begin Test 175: 
Failed to draw 3 cards, test fails
Begin Test 176: 
Failed to draw 3 cards, test fails
Begin Test 177: 
Failed to draw 3 cards, test fails
Begin Test 178: 
Failed to draw 3 cards, test fails
Begin Test 179: 
Failed to draw 3 cards, test fails
Begin Test 180: 
Failed to draw 3 cards, test fails
Begin Test 181: 
Failed to draw 3 cards, test fails
Begin Test 182: 
Failed to draw 3 cards, test fails
Begin Test 183: 
Failed to draw 3 cards, test fails
Begin Test 184: 
Failed to draw 3 cards, test fails
Begin Test 185: 
Failed to draw 3 cards, test fails
Begin Test 186: 
Failed to draw 3 cards, test fails
Begin Test 187: 
Failed to draw 3 cards, test fails
Begin Test 188: 
Failed to draw 3 cards, test fails
Begin Test 189: 
Failed to draw 3 cards, test fails
Begin Test 190: 
Failed to draw 3 cards, test fails
Begin Test 191: 
Failed to draw 3 cards, test fails
Begin Test 192: 
Failed to draw 3 cards, test fails
Begin Test 193: 
Failed to draw 3 cards, test fails
Begin Test 194: 
Failed to draw 3 cards, test fails
Begin Test 195: 
Failed to draw 3 cards, test fails
Begin Test 196: 
Failed to draw 3 cards, test fails
Begin Test 197: 
Failed to draw 3 cards, test fails
Begin Test 198: 
Failed to draw 3 cards, test fails
Begin Test 199: 
Failed to draw 3 cards, test fails
Begin Test 200: 
Failed to draw 3 cards, test fails
Begin Test 201: 
Failed to draw 3 cards, test fails
Begin Test 202: 
Failed to draw 3 cards, test fails
Begin Test 203: 
Failed to draw 3 cards, test fails
Begin Test 204: 
Failed to draw 3 cards, test fails
Begin Test 205: 
Failed to draw 3 cards, test fails
Begin Test 206: 
Failed to draw 3 cards, test fails
Begin Test 207: 
Failed to draw 3 cards, test fails
Begin Test 208: 
Failed to draw 3 cards, test fails
Begin Test 209: 
Failed to draw 3 cards, test fails
Begin Test 210: 
Failed to draw 3 cards, test fails
Begin Test 211: 
Failed to draw 3 cards, test fails
Begin Test 212: 
Failed to draw 3 cards, test fails
Begin Test 213: 
Failed to draw 3 cards, test fails
Begin Test 214: 
Failed to draw 3 cards, test fails
Begin Test 215: 
Failed to draw 3 cards, test fails
Begin Test 216: 
Failed to draw 3 cards, test fails
Begin Test 217: 
Failed to draw 3 cards, test fails
Begin Test 218: 
Failed to draw 3 cards, test fails
Begin Test 219: 
Failed to draw 3 cards, test fails
Begin Test 220: 
Failed to draw 3 cards, test fails
Begin Test 221: 
Failed to draw 3 cards, test fails
Begin Test 222: 
Failed to draw 3 cards, test fails
Begin Test 223: 
Failed to draw 3 cards, test fails
Begin Test 224: 
Failed to draw 3 cards, test fails
Begin Test 225: 
Failed to draw 3 cards, test fails
Begin Test 226: 
Failed to draw 3 cards, test fails
Begin Test 227: 
Failed to draw 3 cards, test fails
Begin Test 228: 
Failed to draw 3 cards, test fails
Begin Test 229: 
Failed to draw 3 cards, test fails
Begin Test 230: 
Failed to draw 3 cards, test fails
Begin Test 231: 
Failed to draw 3 cards, test fails
Begin Test 232: 
Failed to draw 3 cards, test fails
Begin Test 233: 
Failed to draw 3 cards, test fails
Begin Test 234: 
Failed to draw 3 cards, test fails
Begin Test 235: 
Failed to draw 3 cards, test fails
Begin Test 236: 
Failed to draw 3 cards, test fails
Begin Test 237: 
Failed to draw 3 cards, test fails
Begin Test 238: 
Failed to draw 3 cards, test fails
Begin Test 239: 
Failed to draw 3 cards, test fails
Begin Test 240: 
Failed to draw 3 cards, test fails
Begin Test 241: 
Failed to draw 3 cards, test fails
Begin Test 242: 
Failed to draw 3 cards, test fails
Begin Test 243: 
Failed to draw 3 cards, test fails
Begin Test 244: 
Failed to draw 3 cards, test fails
Begin Test 245: 
Failed to draw 3 cards, test fails
Begin Test 246: 
Failed to draw 3 cards, test fails
Begin Test 247: 
Failed to draw 3 cards, test fails
Begin Test 248: 
Failed to draw 3 cards, test fails
Begin Test 249: 
Failed to draw 3 cards, test fails
Begin Test 250: 
Failed to draw 3 cards, test fails
Begin Test 251: 
Failed to draw 3 cards, test fails
Begin Test 252: 
Failed to draw 3 cards, test fails
Begin Test 253: 
Failed to draw 3 cards, test fails
Begin Test 254: 
Failed to draw 3 cards, test fails
Begin Test 255: 
Failed to draw 3 cards, test fails
Begin Test 256: 
Failed to draw 3 cards, test fails
Begin Test 257: 
Failed to draw 3 cards, test fails
Begin Test 258: 
Failed to draw 3 cards, test fails
Begin Test 259: 
Failed to draw 3 cards, test fails
Begin Test 260: 
Failed to draw 3 cards, test fails
Begin Test 261: 
Failed to draw 3 cards, test fails
Begin Test 262: 
Failed to draw 3 cards, test fails
Begin Test 263: 
Failed to draw 3 cards, test fails
Begin Test 264: 
Failed to draw 3 cards, test fails
Begin Test 265: 
Failed to draw 3 cards, test fails
Begin Test 266: 
Failed to draw 3 cards, test fails
Begin Test 267: 
Failed to draw 3 cards, test fails
Begin Test 268: 
Failed to draw 3 cards, test fails
Begin Test 269: 
Failed to draw 3 cards, test fails
Begin Test 270: 
Failed to draw 3 cards, test fails
Begin Test 271: 
Failed to draw 3 cards, test fails
Begin Test 272: 
Failed to draw 3 cards, test fails
Begin Test 273: 
Failed to draw 3 cards, test fails
Begin Test 274: 
Failed to draw 3 cards, test fails
Begin Test 275: 
Failed to draw 3 cards, test fails
Begin Test 276: 
Failed to draw 3 cards, test fails
Begin Test 277: 
Failed to draw 3 cards, test fails
Begin Test 278: 
Failed to draw 3 cards, test fails
Begin Test 279: 
Failed to draw 3 cards, test fails
Begin Test 280: 
Failed to draw 3 cards, test fails
Begin Test 281: 
Failed to draw 3 cards, test fails
Begin Test 282: 
Failed to draw 3 cards, test fails
Begin Test 283: 
Failed to draw 3 cards, test fails
Begin Test 284: 
Failed to draw 3 cards, test fails
Begin Test 285: 
Failed to draw 3 cards, test fails
Begin Test 286: 
Failed to draw 3 cards, test fails
Begin Test 287: 
Failed to draw 3 cards, test fails
Begin Test 288: 
Failed to draw 3 cards, test fails
Begin Test 289: 
Failed to draw 3 cards, test fails
Begin Test 290: 
Failed to draw 3 cards, test fails
Begin Test 291: 
Failed to draw 3 cards, test fails
Begin Test 292: 
Failed to draw 3 cards, test fails
Begin Test 293: 
Failed to draw 3 cards, test fails
Begin Test 294: 
Failed to draw 3 cards, test fails
Begin Test 295: 
Failed to draw 3 cards, test fails
Begin Test 296: 
Failed to draw 3 cards, test fails
Begin Test 297: 
Failed to draw 3 cards, test fails
Begin Test 298: 
Failed to draw 3 cards, test fails
Begin Test 299: 
Failed to draw 3 cards, test fails
Begin Test 300: 
Failed to draw 3 cards, test fails
Begin Test 301: 
Failed to draw 3 cards, test fails
Begin Test 302: 
Failed to draw 3 cards, test fails
Begin Test 303: 
Failed to draw 3 cards, test fails
Begin Test 304: 
Failed to draw 3 cards, test fails
Begin Test 305: 
Failed to draw 3 cards, test fails
Begin Test 306: 
Failed to draw 3 cards, test fails
Begin Test 307: 
Failed to draw 3 cards, test fails
Begin Test 308: 
Failed to draw 3 cards, test fails
Begin Test 309: 
Failed to draw 3 cards, test fails
Begin Test 310: 
Failed to draw 3 cards, test fails
Begin Test 311: 
Failed to draw 3 cards, test fails
Begin Test 312: 
Failed to draw 3 cards, test fails
Begin Test 313: 
Failed to draw 3 cards, test fails
Begin Test 314: 
Failed to draw 3 cards, test fails
Begin Test 315: 
Failed to draw 3 cards, test fails
Begin Test 316: 
Failed to draw 3 cards, test fails
Begin Test 317: 
Failed to draw 3 cards, test fails
Begin Test 318: 
Failed to draw 3 cards, test fails
Begin Test 319: 
Failed to draw 3 cards, test fails
Begin Test 320: 
Failed to draw 3 cards, test fails
Begin Test 321: 
Failed to draw 3 cards, test fails
Begin Test 322: 
Failed to draw 3 cards, test fails
Begin Test 323: 
Failed to draw 3 cards, test fails
Begin Test 324: 
Failed to draw 3 cards, test fails
Begin Test 325: 
Failed to draw 3 cards, test fails
Begin Test 326: 
Failed to draw 3 cards, test fails
Begin Test 327: 
Failed to draw 3 cards, test fails
Begin Test 328: 
Failed to draw 3 cards, test fails
Begin Test 329: 
Failed to draw 3 cards, test fails
Begin Test 330: 
Failed to draw 3 cards, test fails
Begin Test 331: 
Failed to draw 3 cards, test fails
Begin Test 332: 
Failed to draw 3 cards, test fails
Begin Test 333: 
Failed to draw 3 cards, test fails
Begin Test 334: 
Failed to draw 3 cards, test fails
Begin Test 335: 
Failed to draw 3 cards, test fails
Begin Test 336: 
Failed to draw 3 cards, test fails
Begin Test 337: 
Failed to draw 3 cards, test fails
Begin Test 338: 
Failed to draw 3 cards, test fails
Begin Test 339: 
Failed to draw 3 cards, test fails
Begin Test 340: 
Failed to draw 3 cards, test fails
Begin Test 341: 
Failed to draw 3 cards, test fails
Begin Test 342: 
Failed to draw 3 cards, test fails
Begin Test 343: 
Failed to draw 3 cards, test fails
Begin Test 344: 
Failed to draw 3 cards, test fails
Begin Test 345: 
Failed to draw 3 cards, test fails
Begin Test 346: 
Failed to draw 3 cards, test fails
Begin Test 347: 
Failed to draw 3 cards, test fails
Begin Test 348: 
Failed to draw 3 cards, test fails
Begin Test 349: 
Failed to draw 3 cards, test fails
Begin Test 350: 
Failed to draw 3 cards, test fails
Begin Test 351: 
Failed to draw 3 cards, test fails
Begin Test 352: 
Failed to draw 3 cards, test fails
Begin Test 353: 
Failed to draw 3 cards, test fails
Begin Test 354: 
Failed to draw 3 cards, test fails
Begin Test 355: 
Failed to draw 3 cards, test fails
Begin Test 356: 
Failed to draw 3 cards, test fails
Begin Test 357: 
Failed to draw 3 cards, test fails
Begin Test 358: 
Failed to draw 3 cards, test fails
Begin Test 359: 
Failed to draw 3 cards, test fails
Begin Test 360: 
Failed to draw 3 cards, test fails
Begin Test 361: 
Failed to draw 3 cards, test fails
Begin Test 362: 
Failed to draw 3 cards, test fails
Begin Test 363: 
Failed to draw 3 cards, test fails
Begin Test 364: 
Failed to draw 3 cards, test fails
Begin Test 365: 
Failed to draw 3 cards, test fails
Begin Test 366: 
Failed to draw 3 cards, test fails
Begin Test 367: 
Failed to draw 3 cards, test fails
Begin Test 368: 
Failed to draw 3 cards, test fails
Begin Test 369: 
Failed to draw 3 cards, test fails
Begin Test 370: 
Failed to draw 3 cards, test fails
Begin Test 371: 
Failed to draw 3 cards, test fails
Begin Test 372: 
Failed to draw 3 cards, test fails
Begin Test 373: 
Failed to draw 3 cards, test fails
Begin Test 374: 
Failed to draw 3 cards, test fails
Begin Test 375: 
Failed to draw 3 cards, test fails
Begin Test 376: 
Failed to draw 3 cards, test fails
Begin Test 377: 
Failed to draw 3 cards, test fails
Begin Test 378: 
Failed to draw 3 cards, test fails
Begin Test 379: 
Failed to draw 3 cards, test fails
Begin Test 380: 
Failed to draw 3 cards, test fails
Begin Test 381: 
Failed to draw 3 cards, test fails
Begin Test 382: 
Failed to draw 3 cards, test fails
Begin Test 383: 
Failed to draw 3 cards, test fails
Begin Test 384: 
Failed to draw 3 cards, test fails
Begin Test 385: 
Failed to draw 3 cards, test fails
Begin Test 386: 
Failed to draw 3 cards, test fails
Begin Test 387: 
Failed to draw 3 cards, test fails
Begin Test 388: 
Failed to draw 3 cards, test fails
Begin Test 389: 
Failed to draw 3 cards, test fails
Begin Test 390: 
Failed to draw 3 cards, test fails
Begin Test 391: 
Failed to draw 3 cards, test fails
Begin Test 392: 
Failed to draw 3 cards, test fails
Begin Test 393: 
Failed to draw 3 cards, test fails
Begin Test 394: 
Failed to draw 3 cards, test fails
Begin Test 395: 
Failed to draw 3 cards, test fails
Begin Test 396: 
Failed to draw 3 cards, test fails
Begin Test 397: 
Failed to draw 3 cards, test fails
Begin Test 398: 
Failed to draw 3 cards, test fails
Begin Test 399: 
Failed to draw 3 cards, test fails
Begin Test 400: 
Failed to draw 3 cards, test fails
Begin Test 401: 
Failed to draw 3 cards, test fails
Begin Test 402: 
Failed to draw 3 cards, test fails
Begin Test 403: 
Failed to draw 3 cards, test fails
Begin Test 404: 
Failed to draw 3 cards, test fails
Begin Test 405: 
Failed to draw 3 cards, test fails
Begin Test 406: 
Failed to draw 3 cards, test fails
Begin Test 407: 
Failed to draw 3 cards, test fails
Begin Test 408: 
Failed to draw 3 cards, test fails
Begin Test 409: 
Failed to draw 3 cards, test fails
Begin Test 410: 
Failed to draw 3 cards, test fails
Begin Test 411: 
Failed to draw 3 cards, test fails
Begin Test 412: 
Failed to draw 3 cards, test fails
Begin Test 413: 
Failed to draw 3 cards, test fails
Begin Test 414: 
Failed to draw 3 cards, test fails
Begin Test 415: 
Failed to draw 3 cards, test fails
Begin Test 416: 
Failed to draw 3 cards, test fails
Begin Test 417: 
Failed to draw 3 cards, test fails
Begin Test 418: 
Failed to draw 3 cards, test fails
Begin Test 419: 
Failed to draw 3 cards, test fails
Begin Test 420: 
Failed to draw 3 cards, test fails
Begin Test 421: 
Failed to draw 3 cards, test fails
Begin Test 422: 
Failed to draw 3 cards, test fails
Begin Test 423: 
Failed to draw 3 cards, test fails
Begin Test 424: 
Failed to draw 3 cards, test fails
Begin Test 425: 
Failed to draw 3 cards, test fails
Begin Test 426: 
Failed to draw 3 cards, test fails
Begin Test 427: 
Failed to draw 3 cards, test fails
Begin Test 428: 
Failed to draw 3 cards, test fails
Begin Test 429: 
Failed to draw 3 cards, test fails
Begin Test 430: 
Failed to draw 3 cards, test fails
Begin Test 431: 
Failed to draw 3 cards, test fails
Begin Test 432: 
Failed to draw 3 cards, test fails
Begin Test 433: 
Failed to draw 3 cards, test fails
Begin Test 434: 
Failed to draw 3 cards, test fails
Begin Test 435: 
Failed to draw 3 cards, test fails
Begin Test 436: 
Failed to draw 3 cards, test fails
Begin Test 437: 
Failed to draw 3 cards, test fails
Begin Test 438: 
Failed to draw 3 cards, test fails
Begin Test 439: 
Failed to draw 3 cards, test fails
Begin Test 440: 
Failed to draw 3 cards, test fails
Begin Test 441: 
Failed to draw 3 cards, test fails
Begin Test 442: 
Failed to draw 3 cards, test fails
Begin Test 443: 
Failed to draw 3 cards, test fails
Begin Test 444: 
Failed to draw 3 cards, test fails
Begin Test 445: 
Failed to draw 3 cards, test fails
Begin Test 446: 
Failed to draw 3 cards, test fails
Begin Test 447: 
Failed to draw 3 cards, test fails
Begin Test 448: 
Failed to draw 3 cards, test fails
Begin Test 449: 
Failed to draw 3 cards, test fails
Begin Test 450: 
Failed to draw 3 cards, test fails
Begin Test 451: 
Failed to draw 3 cards, test fails
Begin Test 452: 
Failed to draw 3 cards, test fails
Begin Test 453: 
Failed to draw 3 cards, test fails
Begin Test 454: 
Failed to draw 3 cards, test fails
Begin Test 455: 
Failed to draw 3 cards, test fails
Begin Test 456: 
Failed to draw 3 cards, test fails
Begin Test 457: 
Failed to draw 3 cards, test fails
Begin Test 458: 
Failed to draw 3 cards, test fails
Begin Test 459: 
Failed to draw 3 cards, test fails
Begin Test 460: 
Failed to draw 3 cards, test fails
Begin Test 461: 
Failed to draw 3 cards, test fails
Begin Test 462: 
Failed to draw 3 cards, test fails
Begin Test 463: 
Failed to draw 3 cards, test fails
Begin Test 464: 
Failed to draw 3 cards, test fails
Begin Test 465: 
Failed to draw 3 cards, test fails
Begin Test 466: 
Failed to draw 3 cards, test fails
Begin Test 467: 
Failed to draw 3 cards, test fails
Begin Test 468: 
Failed to draw 3 cards, test fails
Begin Test 469: 
Failed to draw 3 cards, test fails
Begin Test 470: 
Failed to draw 3 cards, test fails
Begin Test 471: 
Failed to draw 3 cards, test fails
Begin Test 472: 
Failed to draw 3 cards, test fails
Begin Test 473: 
Failed to draw 3 cards, test fails
Begin Test 474: 
Failed to draw 3 cards, test fails
Begin Test 475: 
Failed to draw 3 cards, test fails
Begin Test 476: 
Failed to draw 3 cards, test fails
Begin Test 477: 
Failed to draw 3 cards, test fails
Begin Test 478: 
Failed to draw 3 cards, test fails
Begin Test 479: 
Failed to draw 3 cards, test fails
Begin Test 480: 
Failed to draw 3 cards, test fails
Begin Test 481: 
Failed to draw 3 cards, test fails
Begin Test 482: 
Failed to draw 3 cards, test fails
Begin Test 483: 
Failed to draw 3 cards, test fails
Begin Test 484: 
Failed to draw 3 cards, test fails
Begin Test 485: 
Failed to draw 3 cards, test fails
Begin Test 486: 
Failed to draw 3 cards, test fails
Begin Test 487: 
Failed to draw 3 cards, test fails
Begin Test 488: 
Failed to draw 3 cards, test fails
Begin Test 489: 
Failed to draw 3 cards, test fails
Begin Test 490: 
Failed to draw 3 cards, test fails
Begin Test 491: 
Failed to draw 3 cards, test fails
Begin Test 492: 
Failed to draw 3 cards, test fails
Begin Test 493: 
Failed to draw 3 cards, test fails
Begin Test 494: 
Failed to draw 3 cards, test fails
Begin Test 495: 
Failed to draw 3 cards, test fails
Begin Test 496: 
Failed to draw 3 cards, test fails
Begin Test 497: 
Failed to draw 3 cards, test fails
Begin Test 498: 
Failed to draw 3 cards, test fails
Begin Test 499: 
Failed to draw 3 cards, test fails
Begin Test 500: 
Failed to draw 3 cards, test fails
Begin Test 501: 
Failed to draw 3 cards, test fails
Begin Test 502: 
Failed to draw 3 cards, test fails
Begin Test 503: 
Failed to draw 3 cards, test fails
Begin Test 504: 
Failed to draw 3 cards, test fails
Begin Test 505: 
Failed to draw 3 cards, test fails
Begin Test 506: 
Failed to draw 3 cards, test fails
Begin Test 507: 
Failed to draw 3 cards, test fails
Begin Test 508: 
Failed to draw 3 cards, test fails
Begin Test 509: 
Failed to draw 3 cards, test fails
Begin Test 510: 
Failed to draw 3 cards, test fails
Begin Test 511: 
Failed to draw 3 cards, test fails
Begin Test 512: 
Failed to draw 3 cards, test fails
Begin Test 513: 
Failed to draw 3 cards, test fails
Begin Test 514: 
Failed to draw 3 cards, test fails
Begin Test 515: 
Failed to draw 3 cards, test fails
Begin Test 516: 
Failed to draw 3 cards, test fails
Begin Test 517: 
Failed to draw 3 cards, test fails
Begin Test 518: 
Failed to draw 3 cards, test fails
Begin Test 519: 
Failed to draw 3 cards, test fails
Begin Test 520: 
Failed to draw 3 cards, test fails
Begin Test 521: 
Failed to draw 3 cards, test fails
Begin Test 522: 
Failed to draw 3 cards, test fails
Begin Test 523: 
Failed to draw 3 cards, test fails
Begin Test 524: 
Failed to draw 3 cards, test fails
Begin Test 525: 
Failed to draw 3 cards, test fails
Begin Test 526: 
Failed to draw 3 cards, test fails
Begin Test 527: 
Failed to draw 3 cards, test fails
Begin Test 528: 
Failed to draw 3 cards, test fails
Begin Test 529: 
Failed to draw 3 cards, test fails
Begin Test 530: 
Failed to draw 3 cards, test fails
Begin Test 531: 
Failed to draw 3 cards, test fails
Begin Test 532: 
Failed to draw 3 cards, test fails
Begin Test 533: 
Failed to draw 3 cards, test fails
Begin Test 534: 
Failed to draw 3 cards, test fails
Begin Test 535: 
Failed to draw 3 cards, test fails
Begin Test 536: 
Failed to draw 3 cards, test fails
Begin Test 537: 
Failed to draw 3 cards, test fails
Begin Test 538: 
Failed to draw 3 cards, test fails
Begin Test 539: 
Failed to draw 3 cards, test fails
Begin Test 540: 
Failed to draw 3 cards, test fails
Begin Test 541: 
Failed to draw 3 cards, test fails
Begin Test 542: 
Failed to draw 3 cards, test fails
Begin Test 543: 
Failed to draw 3 cards, test fails
Begin Test 544: 
Failed to draw 3 cards, test fails
Begin Test 545: 
Failed to draw 3 cards, test fails
Begin Test 546: 
Failed to draw 3 cards, test fails
Begin Test 547: 
Failed to draw 3 cards, test fails
Begin Test 548: 
Failed to draw 3 cards, test fails
Begin Test 549: 
Failed to draw 3 cards, test fails
Begin Test 550: 
Failed to draw 3 cards, test fails
Begin Test 551: 
Failed to draw 3 cards, test fails
Begin Test 552: 
Failed to draw 3 cards, test fails
Begin Test 553: 
Failed to draw 3 cards, test fails
Begin Test 554: 
Failed to draw 3 cards, test fails
Begin Test 555: 
Failed to draw 3 cards, test fails
Begin Test 556: 
Failed to draw 3 cards, test fails
Begin Test 557: 
Failed to draw 3 cards, test fails
Begin Test 558: 
Failed to draw 3 cards, test fails
Begin Test 559: 
Failed to draw 3 cards, test fails
Begin Test 560: 
Failed to draw 3 cards, test fails
Begin Test 561: 
Failed to draw 3 cards, test fails
Begin Test 562: 
Failed to draw 3 cards, test fails
Begin Test 563: 
Failed to draw 3 cards, test fails
Begin Test 564: 
Failed to draw 3 cards, test fails
Begin Test 565: 
Failed to draw 3 cards, test fails
Begin Test 566: 
Failed to draw 3 cards, test fails
Begin Test 567: 
Failed to draw 3 cards, test fails
Begin Test 568: 
Failed to draw 3 cards, test fails
Begin Test 569: 
Failed to draw 3 cards, test fails
Begin Test 570: 
Failed to draw 3 cards, test fails
Begin Test 571: 
Failed to draw 3 cards, test fails
Begin Test 572: 
Failed to draw 3 cards, test fails
Begin Test 573: 
Failed to draw 3 cards, test fails
Begin Test 574: 
Failed to draw 3 cards, test fails
Begin Test 575: 
Failed to draw 3 cards, test fails
Begin Test 576: 
Failed to draw 3 cards, test fails
Begin Test 577: 
Failed to draw 3 cards, test fails
Begin Test 578: 
Failed to draw 3 cards, test fails
Begin Test 579: 
Failed to draw 3 cards, test fails
Begin Test 580: 
Failed to draw 3 cards, test fails
Begin Test 581: 
Failed to draw 3 cards, test fails
Begin Test 582: 
Failed to draw 3 cards, test fails
Begin Test 583: 
Failed to draw 3 cards, test fails
Begin Test 584: 
Failed to draw 3 cards, test fails
Begin Test 585: 
Failed to draw 3 cards, test fails
Begin Test 586: 
Failed to draw 3 cards, test fails
Begin Test 587: 
Failed to draw 3 cards, test fails
Begin Test 588: 
Failed to draw 3 cards, test fails
Begin Test 589: 
Failed to draw 3 cards, test fails
Begin Test 590: 
Failed to draw 3 cards, test fails
Begin Test 591: 
Failed to draw 3 cards, test fails
Begin Test 592: 
Failed to draw 3 cards, test fails
Begin Test 593: 
Failed to draw 3 cards, test fails
Begin Test 594: 
Failed to draw 3 cards, test fails
Begin Test 595: 
Failed to draw 3 cards, test fails
Begin Test 596: 
Failed to draw 3 cards, test fails
Begin Test 597: 
Failed to draw 3 cards, test fails
Begin Test 598: 
Failed to draw 3 cards, test fails
Begin Test 599: 
Failed to draw 3 cards, test fails
Begin Test 600: 
Failed to draw 3 cards, test fails
Begin Test 601: 
Failed to draw 3 cards, test fails
Begin Test 602: 
Failed to draw 3 cards, test fails
Begin Test 603: 
Failed to draw 3 cards, test fails
Begin Test 604: 
Failed to draw 3 cards, test fails
Begin Test 605: 
Failed to draw 3 cards, test fails
Begin Test 606: 
Failed to draw 3 cards, test fails
Begin Test 607: 
Failed to draw 3 cards, test fails
Begin Test 608: 
Failed to draw 3 cards, test fails
Begin Test 609: 
Failed to draw 3 cards, test fails
Begin Test 610: 
Failed to draw 3 cards, test fails
Begin Test 611: 
Failed to draw 3 cards, test fails
Begin Test 612: 
Failed to draw 3 cards, test fails
Begin Test 613: 
Failed to draw 3 cards, test fails
Begin Test 614: 
Failed to draw 3 cards, test fails
Begin Test 615: 
Failed to draw 3 cards, test fails
Begin Test 616: 
Failed to draw 3 cards, test fails
Begin Test 617: 
Failed to draw 3 cards, test fails
Begin Test 618: 
Failed to draw 3 cards, test fails
Begin Test 619: 
Failed to draw 3 cards, test fails
Begin Test 620: 
Failed to draw 3 cards, test fails
Begin Test 621: 
Failed to draw 3 cards, test fails
Begin Test 622: 
Failed to draw 3 cards, test fails
Begin Test 623: 
Failed to draw 3 cards, test fails
Begin Test 624: 
Failed to draw 3 cards, test fails
Begin Test 625: 
Failed to draw 3 cards, test fails
Begin Test 626: 
Failed to draw 3 cards, test fails
Begin Test 627: 
Failed to draw 3 cards, test fails
Begin Test 628: 
Failed to draw 3 cards, test fails
Begin Test 629: 
Failed to draw 3 cards, test fails
Begin Test 630: 
Failed to draw 3 cards, test fails
Begin Test 631: 
Failed to draw 3 cards, test fails
Begin Test 632: 
Failed to draw 3 cards, test fails
Begin Test 633: 
Failed to draw 3 cards, test fails
Begin Test 634: 
Failed to draw 3 cards, test fails
Begin Test 635: 
Failed to draw 3 cards, test fails
Begin Test 636: 
Failed to draw 3 cards, test fails
Begin Test 637: 
Failed to draw 3 cards, test fails
Begin Test 638: 
Failed to draw 3 cards, test fails
Begin Test 639: 
Failed to draw 3 cards, test fails
Begin Test 640: 
Failed to draw 3 cards, test fails
Begin Test 641: 
Failed to draw 3 cards, test fails
Begin Test 642: 
Failed to draw 3 cards, test fails
Begin Test 643: 
Failed to draw 3 cards, test fails
Begin Test 644: 
Failed to draw 3 cards, test fails
Begin Test 645: 
Failed to draw 3 cards, test fails
Begin Test 646: 
Failed to draw 3 cards, test fails
Begin Test 647: 
Failed to draw 3 cards, test fails
Begin Test 648: 
Failed to draw 3 cards, test fails
Begin Test 649: 
Failed to draw 3 cards, test fails
Begin Test 650: 
Failed to draw 3 cards, test fails
Begin Test 651: 
Failed to draw 3 cards, test fails
Begin Test 652: 
Failed to draw 3 cards, test fails
Begin Test 653: 
Failed to draw 3 cards, test fails
Begin Test 654: 
Failed to draw 3 cards, test fails
Begin Test 655: 
Failed to draw 3 cards, test fails
Begin Test 656: 
Failed to draw 3 cards, test fails
Begin Test 657: 
Failed to draw 3 cards, test fails
Begin Test 658: 
Failed to draw 3 cards, test fails
Begin Test 659: 
Failed to draw 3 cards, test fails
Begin Test 660: 
Failed to draw 3 cards, test fails
Begin Test 661: 
Failed to draw 3 cards, test fails
Begin Test 662: 
Failed to draw 3 cards, test fails
Begin Test 663: 
Failed to draw 3 cards, test fails
Begin Test 664: 
Failed to draw 3 cards, test fails
Begin Test 665: 
Failed to draw 3 cards, test fails
Begin Test 666: 
Failed to draw 3 cards, test fails
Begin Test 667: 
Failed to draw 3 cards, test fails
Begin Test 668: 
Failed to draw 3 cards, test fails
Begin Test 669: 
Failed to draw 3 cards, test fails
Begin Test 670: 
Failed to draw 3 cards, test fails
Begin Test 671: 
Failed to draw 3 cards, test fails
Begin Test 672: 
Failed to draw 3 cards, test fails
Begin Test 673: 
Failed to draw 3 cards, test fails
Begin Test 674: 
Failed to draw 3 cards, test fails
Begin Test 675: 
Failed to draw 3 cards, test fails
Begin Test 676: 
Failed to draw 3 cards, test fails
Begin Test 677: 
Failed to draw 3 cards, test fails
Begin Test 678: 
Failed to draw 3 cards, test fails
Begin Test 679: 
Failed to draw 3 cards, test fails
Begin Test 680: 
Failed to draw 3 cards, test fails
Begin Test 681: 
Failed to draw 3 cards, test fails
Begin Test 682: 
Failed to draw 3 cards, test fails
Begin Test 683: 
Failed to draw 3 cards, test fails
Begin Test 684: 
Failed to draw 3 cards, test fails
Begin Test 685: 
Failed to draw 3 cards, test fails
Begin Test 686: 
Failed to draw 3 cards, test fails
Begin Test 687: 
Failed to draw 3 cards, test fails
Begin Test 688: 
Failed to draw 3 cards, test fails
Begin Test 689: 
Failed to draw 3 cards, test fails
Begin Test 690: 
Failed to draw 3 cards, test fails
Begin Test 691: 
Failed to draw 3 cards, test fails
Begin Test 692: 
Failed to draw 3 cards, test fails
Begin Test 693: 
Failed to draw 3 cards, test fails
Begin Test 694: 
Failed to draw 3 cards, test fails
Begin Test 695: 
Failed to draw 3 cards, test fails
Begin Test 696: 
Failed to draw 3 cards, test fails
Begin Test 697: 
Failed to draw 3 cards, test fails
Begin Test 698: 
Failed to draw 3 cards, test fails
Begin Test 699: 
Failed to draw 3 cards, test fails
Begin Test 700: 
Failed to draw 3 cards, test fails
Begin Test 701: 
Failed to draw 3 cards, test fails
Begin Test 702: 
Failed to draw 3 cards, test fails
Begin Test 703: 
Failed to draw 3 cards, test fails
Begin Test 704: 
Failed to draw 3 cards, test fails
Begin Test 705: 
Failed to draw 3 cards, test fails
Begin Test 706: 
Failed to draw 3 cards, test fails
Begin Test 707: 
Failed to draw 3 cards, test fails
Begin Test 708: 
Failed to draw 3 cards, test fails
Begin Test 709: 
Failed to draw 3 cards, test fails
Begin Test 710: 
Failed to draw 3 cards, test fails
Begin Test 711: 
Failed to draw 3 cards, test fails
Begin Test 712: 
Failed to draw 3 cards, test fails
Begin Test 713: 
Failed to draw 3 cards, test fails
Begin Test 714: 
Failed to draw 3 cards, test fails
Begin Test 715: 
Failed to draw 3 cards, test fails
Begin Test 716: 
Failed to draw 3 cards, test fails
Begin Test 717: 
Failed to draw 3 cards, test fails
Begin Test 718: 
Failed to draw 3 cards, test fails
Begin Test 719: 
Failed to draw 3 cards, test fails
Begin Test 720: 
Failed to draw 3 cards, test fails
Begin Test 721: 
Failed to draw 3 cards, test fails
Begin Test 722: 
Failed to draw 3 cards, test fails
Begin Test 723: 
Failed to draw 3 cards, test fails
Begin Test 724: 
Failed to draw 3 cards, test fails
Begin Test 725: 
Failed to draw 3 cards, test fails
Begin Test 726: 
Failed to draw 3 cards, test fails
Begin Test 727: 
Failed to draw 3 cards, test fails
Begin Test 728: 
Failed to draw 3 cards, test fails
Begin Test 729: 
Failed to draw 3 cards, test fails
Begin Test 730: 
Failed to draw 3 cards, test fails
Begin Test 731: 
Failed to draw 3 cards, test fails
Begin Test 732: 
Failed to draw 3 cards, test fails
Begin Test 733: 
Failed to draw 3 cards, test fails
Begin Test 734: 
Failed to draw 3 cards, test fails
Begin Test 735: 
Failed to draw 3 cards, test fails
Begin Test 736: 
Failed to draw 3 cards, test fails
Begin Test 737: 
Failed to draw 3 cards, test fails
Begin Test 738: 
Failed to draw 3 cards, test fails
Begin Test 739: 
Failed to draw 3 cards, test fails
Begin Test 740: 
Failed to draw 3 cards, test fails
Begin Test 741: 
Failed to draw 3 cards, test fails
Begin Test 742: 
Failed to draw 3 cards, test fails
Begin Test 743: 
Failed to draw 3 cards, test fails
Begin Test 744: 
Failed to draw 3 cards, test fails
Begin Test 745: 
Failed to draw 3 cards, test fails
Begin Test 746: 
Failed to draw 3 cards, test fails
Begin Test 747: 
Failed to draw 3 cards, test fails
Begin Test 748: 
Failed to draw 3 cards, test fails
Begin Test 749: 
Failed to draw 3 cards, test fails
Begin Test 750: 
Failed to draw 3 cards, test fails
Begin Test 751: 
Failed to draw 3 cards, test fails
Begin Test 752: 
Failed to draw 3 cards, test fails
Begin Test 753: 
Failed to draw 3 cards, test fails
Begin Test 754: 
Failed to draw 3 cards, test fails
Begin Test 755: 
Failed to draw 3 cards, test fails
Begin Test 756: 
Failed to draw 3 cards, test fails
Begin Test 757: 
Failed to draw 3 cards, test fails
Begin Test 758: 
Failed to draw 3 cards, test fails
Begin Test 759: 
Failed to draw 3 cards, test fails
Begin Test 760: 
Failed to draw 3 cards, test fails
Begin Test 761: 
Failed to draw 3 cards, test fails
Begin Test 762: 
Failed to draw 3 cards, test fails
Begin Test 763: 
Failed to draw 3 cards, test fails
Begin Test 764: 
Failed to draw 3 cards, test fails
Begin Test 765: 
Failed to draw 3 cards, test fails
Begin Test 766: 
Failed to draw 3 cards, test fails
Begin Test 767: 
Failed to draw 3 cards, test fails
Begin Test 768: 
Failed to draw 3 cards, test fails
Begin Test 769: 
Failed to draw 3 cards, test fails
Begin Test 770: 
Failed to draw 3 cards, test fails
Begin Test 771: 
Failed to draw 3 cards, test fails
Begin Test 772: 
Failed to draw 3 cards, test fails
Begin Test 773: 
Failed to draw 3 cards, test fails
Begin Test 774: 
Failed to draw 3 cards, test fails
Begin Test 775: 
Failed to draw 3 cards, test fails
Begin Test 776: 
Failed to draw 3 cards, test fails
Begin Test 777: 
Failed to draw 3 cards, test fails
Begin Test 778: 
Failed to draw 3 cards, test fails
Begin Test 779: 
Failed to draw 3 cards, test fails
Begin Test 780: 
Failed to draw 3 cards, test fails
Begin Test 781: 
Failed to draw 3 cards, test fails
Begin Test 782: 
Failed to draw 3 cards, test fails
Begin Test 783: 
Failed to draw 3 cards, test fails
Begin Test 784: 
Failed to draw 3 cards, test fails
Begin Test 785: 
Failed to draw 3 cards, test fails
Begin Test 786: 
Failed to draw 3 cards, test fails
Begin Test 787: 
Failed to draw 3 cards, test fails
Begin Test 788: 
Failed to draw 3 cards, test fails
Begin Test 789: 
Failed to draw 3 cards, test fails
Begin Test 790: 
Failed to draw 3 cards, test fails
Begin Test 791: 
Failed to draw 3 cards, test fails
Begin Test 792: 
Failed to draw 3 cards, test fails
Begin Test 793: 
Failed to draw 3 cards, test fails
Begin Test 794: 
Failed to draw 3 cards, test fails
Begin Test 795: 
Failed to draw 3 cards, test fails
Begin Test 796: 
Failed to draw 3 cards, test fails
Begin Test 797: 
Failed to draw 3 cards, test fails
Begin Test 798: 
Failed to draw 3 cards, test fails
Begin Test 799: 
Failed to draw 3 cards, test fails
Begin Test 800: 
Failed to draw 3 cards, test fails
Begin Test 801: 
Failed to draw 3 cards, test fails
Begin Test 802: 
Failed to draw 3 cards, test fails
Begin Test 803: 
Failed to draw 3 cards, test fails
Begin Test 804: 
Failed to draw 3 cards, test fails
Begin Test 805: 
Failed to draw 3 cards, test fails
Begin Test 806: 
Failed to draw 3 cards, test fails
Begin Test 807: 
Failed to draw 3 cards, test fails
Begin Test 808: 
Failed to draw 3 cards, test fails
Begin Test 809: 
Failed to draw 3 cards, test fails
Begin Test 810: 
Failed to draw 3 cards, test fails
Begin Test 811: 
Failed to draw 3 cards, test fails
Begin Test 812: 
Failed to draw 3 cards, test fails
Begin Test 813: 
Failed to draw 3 cards, test fails
Begin Test 814: 
Failed to draw 3 cards, test fails
Begin Test 815: 
Failed to draw 3 cards, test fails
Begin Test 816: 
Failed to draw 3 cards, test fails
Begin Test 817: 
Failed to draw 3 cards, test fails
Begin Test 818: 
Failed to draw 3 cards, test fails
Begin Test 819: 
Failed to draw 3 cards, test fails
Begin Test 820: 
Failed to draw 3 cards, test fails
Begin Test 821: 
Failed to draw 3 cards, test fails
Begin Test 822: 
Failed to draw 3 cards, test fails
Begin Test 823: 
Failed to draw 3 cards, test fails
Begin Test 824: 
Failed to draw 3 cards, test fails
Begin Test 825: 
Failed to draw 3 cards, test fails
Begin Test 826: 
Failed to draw 3 cards, test fails
Begin Test 827: 
Failed to draw 3 cards, test fails
Begin Test 828: 
Failed to draw 3 cards, test fails
Begin Test 829: 
Failed to draw 3 cards, test fails
Begin Test 830: 
Failed to draw 3 cards, test fails
Begin Test 831: 
Failed to draw 3 cards, test fails
Begin Test 832: 
Failed to draw 3 cards, test fails
Begin Test 833: 
Failed to draw 3 cards, test fails
Begin Test 834: 
Failed to draw 3 cards, test fails
Begin Test 835: 
Failed to draw 3 cards, test fails
Begin Test 836: 
Failed to draw 3 cards, test fails
Begin Test 837: 
Failed to draw 3 cards, test fails
Begin Test 838: 
Failed to draw 3 cards, test fails
Begin Test 839: 
Failed to draw 3 cards, test fails
Begin Test 840: 
Failed to draw 3 cards, test fails
Begin Test 841: 
Failed to draw 3 cards, test fails
Begin Test 842: 
Failed to draw 3 cards, test fails
Begin Test 843: 
Failed to draw 3 cards, test fails
Begin Test 844: 
Failed to draw 3 cards, test fails
Begin Test 845: 
Failed to draw 3 cards, test fails
Begin Test 846: 
Failed to draw 3 cards, test fails
Begin Test 847: 
Failed to draw 3 cards, test fails
Begin Test 848: 
Failed to draw 3 cards, test fails
Begin Test 849: 
Failed to draw 3 cards, test fails
Begin Test 850: 
Failed to draw 3 cards, test fails
Begin Test 851: 
Failed to draw 3 cards, test fails
Begin Test 852: 
Failed to draw 3 cards, test fails
Begin Test 853: 
Failed to draw 3 cards, test fails
Begin Test 854: 
Failed to draw 3 cards, test fails
Begin Test 855: 
Failed to draw 3 cards, test fails
Begin Test 856: 
Failed to draw 3 cards, test fails
Begin Test 857: 
Failed to draw 3 cards, test fails
Begin Test 858: 
Failed to draw 3 cards, test fails
Begin Test 859: 
Failed to draw 3 cards, test fails
Begin Test 860: 
Failed to draw 3 cards, test fails
Begin Test 861: 
Failed to draw 3 cards, test fails
Begin Test 862: 
Failed to draw 3 cards, test fails
Begin Test 863: 
Failed to draw 3 cards, test fails
Begin Test 864: 
Failed to draw 3 cards, test fails
Begin Test 865: 
Failed to draw 3 cards, test fails
Begin Test 866: 
Failed to draw 3 cards, test fails
Begin Test 867: 
Failed to draw 3 cards, test fails
Begin Test 868: 
Failed to draw 3 cards, test fails
Begin Test 869: 
Failed to draw 3 cards, test fails
Begin Test 870: 
Failed to draw 3 cards, test fails
Begin Test 871: 
Failed to draw 3 cards, test fails
Begin Test 872: 
Failed to draw 3 cards, test fails
Begin Test 873: 
Failed to draw 3 cards, test fails
Begin Test 874: 
Failed to draw 3 cards, test fails
Begin Test 875: 
Failed to draw 3 cards, test fails
Begin Test 876: 
Failed to draw 3 cards, test fails
Begin Test 877: 
Failed to draw 3 cards, test fails
Begin Test 878: 
Failed to draw 3 cards, test fails
Begin Test 879: 
Failed to draw 3 cards, test fails
Begin Test 880: 
Failed to draw 3 cards, test fails
Begin Test 881: 
Failed to draw 3 cards, test fails
Begin Test 882: 
Failed to draw 3 cards, test fails
Begin Test 883: 
Failed to draw 3 cards, test fails
Begin Test 884: 
Failed to draw 3 cards, test fails
Begin Test 885: 
Failed to draw 3 cards, test fails
Begin Test 886: 
Failed to draw 3 cards, test fails
Begin Test 887: 
Failed to draw 3 cards, test fails
Begin Test 888: 
Failed to draw 3 cards, test fails
Begin Test 889: 
Failed to draw 3 cards, test fails
Begin Test 890: 
Failed to draw 3 cards, test fails
Begin Test 891: 
Failed to draw 3 cards, test fails
Begin Test 892: 
Failed to draw 3 cards, test fails
Begin Test 893: 
Failed to draw 3 cards, test fails
Begin Test 894: 
Failed to draw 3 cards, test fails
Begin Test 895: 
Failed to draw 3 cards, test fails
Begin Test 896: 
Failed to draw 3 cards, test fails
Begin Test 897: 
Failed to draw 3 cards, test fails
Begin Test 898: 
Failed to draw 3 cards, test fails
Begin Test 899: 
Failed to draw 3 cards, test fails
Begin Test 900: 
Failed to draw 3 cards, test fails
Begin Test 901: 
Failed to draw 3 cards, test fails
Begin Test 902: 
Failed to draw 3 cards, test fails
Begin Test 903: 
Failed to draw 3 cards, test fails
Begin Test 904: 
Failed to draw 3 cards, test fails
Begin Test 905: 
Failed to draw 3 cards, test fails
Begin Test 906: 
Failed to draw 3 cards, test fails
Begin Test 907: 
Failed to draw 3 cards, test fails
Begin Test 908: 
Failed to draw 3 cards, test fails
Begin Test 909: 
Failed to draw 3 cards, test fails
Begin Test 910: 
Failed to draw 3 cards, test fails
Begin Test 911: 
Failed to draw 3 cards, test fails
Begin Test 912: 
Failed to draw 3 cards, test fails
Begin Test 913: 
Failed to draw 3 cards, test fails
Begin Test 914: 
Failed to draw 3 cards, test fails
Begin Test 915: 
Failed to draw 3 cards, test fails
Begin Test 916: 
Failed to draw 3 cards, test fails
Begin Test 917: 
Failed to draw 3 cards, test fails
Begin Test 918: 
Failed to draw 3 cards, test fails
Begin Test 919: 
Failed to draw 3 cards, test fails
Begin Test 920: 
Failed to draw 3 cards, test fails
Begin Test 921: 
Failed to draw 3 cards, test fails
Begin Test 922: 
Failed to draw 3 cards, test fails
Begin Test 923: 
Failed to draw 3 cards, test fails
Begin Test 924: 
Failed to draw 3 cards, test fails
Begin Test 925: 
Failed to draw 3 cards, test fails
Begin Test 926: 
Failed to draw 3 cards, test fails
Begin Test 927: 
Failed to draw 3 cards, test fails
Begin Test 928: 
Failed to draw 3 cards, test fails
Begin Test 929: 
Failed to draw 3 cards, test fails
Begin Test 930: 
Failed to draw 3 cards, test fails
Begin Test 931: 
Failed to draw 3 cards, test fails
Begin Test 932: 
Failed to draw 3 cards, test fails
Begin Test 933: 
Failed to draw 3 cards, test fails
Begin Test 934: 
Failed to draw 3 cards, test fails
Begin Test 935: 
Failed to draw 3 cards, test fails
Begin Test 936: 
Failed to draw 3 cards, test fails
Begin Test 937: 
Failed to draw 3 cards, test fails
Begin Test 938: 
Failed to draw 3 cards, test fails
Begin Test 939: 
Failed to draw 3 cards, test fails
Begin Test 940: 
Failed to draw 3 cards, test fails
Begin Test 941: 
Failed to draw 3 cards, test fails
Begin Test 942: 
Failed to draw 3 cards, test fails
Begin Test 943: 
Failed to draw 3 cards, test fails
Begin Test 944: 
Failed to draw 3 cards, test fails
Begin Test 945: 
Failed to draw 3 cards, test fails
Begin Test 946: 
Failed to draw 3 cards, test fails
Begin Test 947: 
Failed to draw 3 cards, test fails
Begin Test 948: 
Failed to draw 3 cards, test fails
Begin Test 949: 
Failed to draw 3 cards, test fails
Begin Test 950: 
Failed to draw 3 cards, test fails
Begin Test 951: 
Failed to draw 3 cards, test fails
Begin Test 952: 
Failed to draw 3 cards, test fails
Begin Test 953: 
Failed to draw 3 cards, test fails
Begin Test 954: 
Failed to draw 3 cards, test fails
Begin Test 955: 
Failed to draw 3 cards, test fails
Begin Test 956: 
Failed to draw 3 cards, test fails
Begin Test 957: 
Failed to draw 3 cards, test fails
Begin Test 958: 
Failed to draw 3 cards, test fails
Begin Test 959: 
Failed to draw 3 cards, test fails
Begin Test 960: 
Failed to draw 3 cards, test fails
Begin Test 961: 
Failed to draw 3 cards, test fails
Begin Test 962: 
Failed to draw 3 cards, test fails
Begin Test 963: 
Failed to draw 3 cards, test fails
Begin Test 964: 
Failed to draw 3 cards, test fails
Begin Test 965: 
Failed to draw 3 cards, test fails
Begin Test 966: 
Failed to draw 3 cards, test fails
Begin Test 967: 
Failed to draw 3 cards, test fails
Begin Test 968: 
Failed to draw 3 cards, test fails
Begin Test 969: 
Failed to draw 3 cards, test fails
Begin Test 970: 
Failed to draw 3 cards, test fails
Begin Test 971: 
Failed to draw 3 cards, test fails
Begin Test 972: 
Failed to draw 3 cards, test fails
Begin Test 973: 
Failed to draw 3 cards, test fails
Begin Test 974: 
Failed to draw 3 cards, test fails
Begin Test 975: 
Failed to draw 3 cards, test fails
Begin Test 976: 
Failed to draw 3 cards, test fails
Begin Test 977: 
Failed to draw 3 cards, test fails
Begin Test 978: 
Failed to draw 3 cards, test fails
Begin Test 979: 
Failed to draw 3 cards, test fails
Begin Test 980: 
Failed to draw 3 cards, test fails
Begin Test 981: 
Failed to draw 3 cards, test fails
Begin Test 982: 
Failed to draw 3 cards, test fails
Begin Test 983: 
Failed to draw 3 cards, test fails
Begin Test 984: 
Failed to draw 3 cards, test fails
Begin Test 985: 
Failed to draw 3 cards, test fails
Begin Test 986: 
Failed to draw 3 cards, test fails
Begin Test 987: 
Failed to draw 3 cards, test fails
Begin Test 988: 
Failed to draw 3 cards, test fails
Begin Test 989: 
Failed to draw 3 cards, test fails
Begin Test 990: 
Failed to draw 3 cards, test fails
Begin Test 991: 
Failed to draw 3 cards, test fails
Begin Test 992: 
Failed to draw 3 cards, test fails
Begin Test 993: 
Failed to draw 3 cards, test fails
Begin Test 994: 
Failed to draw 3 cards, test fails
Begin Test 995: 
Failed to draw 3 cards, test fails
Begin Test 996: 
Failed to draw 3 cards, test fails
Begin Test 997: 
Failed to draw 3 cards, test fails
Begin Test 998: 
Failed to draw 3 cards, test fails
Begin Test 999: 
Failed to draw 3 cards, test fails
Function 'updateCoins'
Lines executed:81.82% of 11

Function 'gainCard'
Lines executed:76.92% of 13

Function 'discardCard'
Lines executed:92.31% of 13

Function 'cardEffect'
Lines executed:17.97% of 217

Function 'playgreathall'
Lines executed:100.00% of 4

Function 'playcouncilroom'
Lines executed:0.00% of 9

Function 'playvillage'
Lines executed:0.00% of 5

Function 'playsteward'
Lines executed:0.00% of 10

Function 'playsmithy'
Lines executed:100.00% of 5

Function 'getCost'
Lines executed:10.00% of 30

Function 'drawCard'
Lines executed:100.00% of 22

Function 'getWinners'
Lines executed:0.00% of 24

Function 'scoreFor'
Lines executed:0.00% of 24

Function 'isGameOver'
Lines executed:100.00% of 10

Function 'endTurn'
Lines executed:100.00% of 20

Function 'whoseTurn'
Lines executed:100.00% of 2

Function 'fullDeckCount'
Lines executed:0.00% of 9

Function 'supplyCount'
Lines executed:100.00% of 2

Function 'handCard'
Lines executed:100.00% of 3

Function 'numHandCards'
Lines executed:0.00% of 2

Function 'buyCard'
Lines executed:46.15% of 13

Function 'playCard'
Lines executed:92.86% of 14

Function 'shuffle'
Lines executed:100.00% of 16

Function 'initializeGame'
Lines executed:95.16% of 62

Function 'kingdomCards'
Lines executed:0.00% of 13

Function 'newGame'
Lines executed:0.00% of 3

Function 'compare'
Lines executed:100.00% of 6

File 'dominion.c'
Lines executed:42.88% of 562
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:97
        -:    0:Programs:39
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
        -:    8:int playsmithy(int currentPlayer, struct gameState *state, int handPos);
        -:    9:int playsteward(int currentPlayer, struct gameState *state, int choice1, int choice2, int choice3, int handPos);
        -:   10:int playvillage(int currentPlayer, struct gameState *state, int handPos);
        -:   11:int playcouncilroom(int currentPlayer, struct gameState *state, int handPos);
        -:   12:int playgreathall(int currentPlayer, struct gameState *state, int handPos);
        -:   13:
  1606920:   14:int compare(const void* a, const void* b) {
  1606920:   15:  if (*(int*)a > *(int*)b)
    88142:   16:    return 1;
  1518778:   17:  if (*(int*)a < *(int*)b)
   243399:   18:    return -1;
  1275379:   19:  return 0;
        -:   20:}
        -:   21:
    #####:   22:struct gameState* newGame() {
    #####:   23:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   24:  return g;
        -:   25:}
        -:   26:
    #####:   27:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
        -:   28:		  int k8, int k9, int k10) {
    #####:   29:  int* k = malloc(10 * sizeof(int));
    #####:   30:  k[0] = k1;
    #####:   31:  k[1] = k2;
    #####:   32:  k[2] = k3;
    #####:   33:  k[3] = k4;
    #####:   34:  k[4] = k5;
    #####:   35:  k[5] = k6;
    #####:   36:  k[6] = k7;
    #####:   37:  k[7] = k8;
    #####:   38:  k[8] = k9;
    #####:   39:  k[9] = k10;
    #####:   40:  return k;
        -:   41:}
        -:   42:
    48187:   43:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
        -:   44:		   struct gameState *state) {
        -:   45:
        -:   46:  int i;
        -:   47:  int j;
        -:   48:  int it;			
        -:   49:  //set up random number generator
    48187:   50:  SelectStream(1);
    48187:   51:  PutSeed((long)randomSeed);
        -:   52:  
        -:   53:  //check number of players
    48187:   54:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
        -:   55:    {
    24290:   56:      return -1;
        -:   57:    }
        -:   58:
        -:   59:  //set number of players
    23897:   60:  state->numPlayers = numPlayers;
        -:   61:
        -:   62:  //check selected kingdom cards are different
   262867:   63:  for (i = 0; i < 10; i++)
        -:   64:    {
  2628670:   65:      for (j = 0; j < 10; j++)
        -:   66:        {
  2389700:   67:	  if (j != i && kingdomCards[j] == kingdomCards[i])
        -:   68:	    {
    #####:   69:	      return -1;
        -:   70:	    }
        -:   71:        }
        -:   72:    }
        -:   73:
        -:   74:
        -:   75:  //initialize supply
        -:   76:  ///////////////////////////////
        -:   77:
        -:   78:  //set number of Curse cards
    23897:   79:  if (numPlayers == 2)
        -:   80:    {
    12084:   81:      state->supplyCount[curse] = 10;
        -:   82:    }
    11813:   83:  else if (numPlayers == 3)
        -:   84:    {
    11813:   85:      state->supplyCount[curse] = 20;
        -:   86:    }
        -:   87:  else
        -:   88:    {
    #####:   89:      state->supplyCount[curse] = 30;
        -:   90:    }
        -:   91:
        -:   92:  //set number of Victory cards
    23897:   93:  if (numPlayers == 2)
        -:   94:    {
    12084:   95:      state->supplyCount[estate] = 8;
    12084:   96:      state->supplyCount[duchy] = 8;
    12084:   97:      state->supplyCount[province] = 8;
        -:   98:    }
        -:   99:  else
        -:  100:    {
    11813:  101:      state->supplyCount[estate] = 12;
    11813:  102:      state->supplyCount[duchy] = 12;
    11813:  103:      state->supplyCount[province] = 12;
        -:  104:    }
        -:  105:
        -:  106:  //set number of Treasure cards
    23897:  107:  state->supplyCount[copper] = 60 - (7 * numPlayers);
    23897:  108:  state->supplyCount[silver] = 40;
    23897:  109:  state->supplyCount[gold] = 30;
        -:  110:
        -:  111:  //set number of Kingdom cards
   501837:  112:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
        -:  113:    {
  3943005:  114:      for (j = 0; j < 10; j++)           		//loop chosen cards
        -:  115:	{
  3704035:  116:	  if (kingdomCards[j] == i)
        -:  117:	    {
        -:  118:	      //check if card is a 'Victory' Kingdom card
   238970:  119:	      if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
        -:  120:		{
    47800:  121:		  if (numPlayers == 2){ 
    12087:  122:		    state->supplyCount[i] = 8; 
        -:  123:		  }
    11813:  124:		  else{ state->supplyCount[i] = 12; }
        -:  125:		}
        -:  126:	      else
        -:  127:		{
   215070:  128:		  state->supplyCount[i] = 10;
        -:  129:		}
   238970:  130:	      break;
        -:  131:	    }
        -:  132:	  else    //card is not in the set choosen for the game
        -:  133:	    {
  3465065:  134:	      state->supplyCount[i] = -1;
        -:  135:	    }
        -:  136:	}
        -:  137:
        -:  138:    }
        -:  139:
        -:  140:  ////////////////////////
        -:  141:  //supply intilization complete
        -:  142:
        -:  143:  //set player decks
    83504:  144:  for (i = 0; i < numPlayers; i++)
        -:  145:    {
    59607:  146:      state->deckCount[i] = 0;
   238428:  147:      for (j = 0; j < 3; j++)
        -:  148:	{
   178821:  149:	  state->deck[i][j] = estate;
   178821:  150:	  state->deckCount[i]++;
        -:  151:	}
   476856:  152:      for (j = 3; j < 10; j++)
        -:  153:	{
   417249:  154:	  state->deck[i][j] = copper;
   417249:  155:	  state->deckCount[i]++;		
        -:  156:	}
        -:  157:    }
        -:  158:
        -:  159:  //shuffle player decks
    83504:  160:  for (i = 0; i < numPlayers; i++)
        -:  161:    {
    59607:  162:      if ( shuffle(i, state) < 0 )
        -:  163:	{
    #####:  164:	  return -1;
        -:  165:	}
        -:  166:    }
        -:  167:
        -:  168:  //draw player hands
    83504:  169:  for (i = 0; i < numPlayers; i++)
        -:  170:    {  
        -:  171:      //initialize hand size to zero
    59607:  172:      state->handCount[i] = 0;
    59607:  173:      state->discardCount[i] = 0;
        -:  174:      //draw 5 cards
        -:  175:      // for (j = 0; j < 5; j++)
        -:  176:      //	{
        -:  177:      //	  drawCard(i, state);
        -:  178:      //	}
        -:  179:    }
        -:  180:  
        -:  181:  //set embargo tokens to 0 for all supply piles
   669116:  182:  for (i = 0; i <= treasure_map; i++)
        -:  183:    {
   645219:  184:      state->embargoTokens[i] = 0;
        -:  185:    }
        -:  186:
        -:  187:  //initialize first player's turn
    23897:  188:  state->outpostPlayed = 0;
    23897:  189:  state->phase = 0;
    23897:  190:  state->numActions = 1;
    23897:  191:  state->numBuys = 1;
    23897:  192:  state->playedCardCount = 0;
    23897:  193:  state->whoseTurn = 0;
    23897:  194:  state->handCount[state->whoseTurn] = 0;
        -:  195:  //int it; move to top
        -:  196:
        -:  197:  //Moved draw cards to here, only drawing at the start of a turn
   143382:  198:  for (it = 0; it < 5; it++){
   119485:  199:    drawCard(state->whoseTurn, state);
        -:  200:  }
        -:  201:
    23897:  202:  updateCoins(state->whoseTurn, state, 0);
        -:  203:
    23897:  204:  return 0;
        -:  205:}
        -:  206:
    67266:  207:int shuffle(int player, struct gameState *state) {
        -:  208: 
        -:  209:
        -:  210:  int newDeck[MAX_DECK];
    67266:  211:  int newDeckPos = 0;
        -:  212:  int card;
        -:  213:  int i;
        -:  214:
    67266:  215:  if (state->deckCount[player] < 1)
     7097:  216:    return -1;
    60169:  217:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare); 
        -:  218:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  219:
   871509:  220:  while (state->deckCount[player] > 0) {
   751171:  221:    card = floor(Random() * state->deckCount[player]);
   751171:  222:    newDeck[newDeckPos] = state->deck[player][card];
   751171:  223:    newDeckPos++;
 16502507:  224:    for (i = card; i < state->deckCount[player]-1; i++) {
 15751336:  225:      state->deck[player][i] = state->deck[player][i+1];
        -:  226:    }
   751171:  227:    state->deckCount[player]--;
        -:  228:  }
   807319:  229:  for (i = 0; i < newDeckPos; i++) {
   747150:  230:    state->deck[player][i] = newDeck[i];
   747150:  231:    state->deckCount[player]++;
        -:  232:  }
        -:  233:
    60169:  234:  return 0;
        -:  235:}
        -:  236:
    46778:  237:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state) 
        -:  238:{	
        -:  239:  int card;
    46778:  240:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  241:
        -:  242:  //check if it is the right phase
    46778:  243:  if (state->phase != 0)
        -:  244:    {
    #####:  245:      return -1;
        -:  246:    }
        -:  247:	
        -:  248:  //check if player has enough actions
    46778:  249:  if ( state->numActions < 1 )
        -:  250:    {
    18342:  251:      return -1;
        -:  252:    }
        -:  253:	
        -:  254:  //get card played
    28436:  255:  card = handCard(handPos, state);
        -:  256:	
        -:  257:  //check if selected card is an action
    28436:  258:  if ( card < adventurer || card > treasure_map )
        -:  259:    {
     2751:  260:      return -1;
        -:  261:    }
        -:  262:	
        -:  263:  //play card
    25685:  264:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
        -:  265:    {
     8821:  266:      return -1;
        -:  267:    }
        -:  268:	
        -:  269:  //reduce number of actions
    16864:  270:  state->numActions--;
        -:  271:
        -:  272:  //update coins (Treasure cards may be added with card draws)
    16864:  273:  updateCoins(state->whoseTurn, state, coin_bonus);
        -:  274:	
    16864:  275:  return 0;
        -:  276:}
        -:  277:
        3:  278:int buyCard(int supplyPos, struct gameState *state) {
        -:  279:  int who;
        -:  280:  if (DEBUG){
        -:  281:    printf("Entering buyCard...\n");
        -:  282:  }
        -:  283:
        -:  284:  // I don't know what to do about the phase thing.
        -:  285:
        3:  286:  who = state->whoseTurn;
        -:  287:
        3:  288:  if (state->numBuys < 1){
        -:  289:    if (DEBUG)
        -:  290:      printf("You do not have any buys left\n");
    #####:  291:    return -1;
        3:  292:  } else if (supplyCount(supplyPos, state) <1){
        -:  293:    if (DEBUG)
        -:  294:      printf("There are not any of that type of card left\n");
    #####:  295:    return -1;
        3:  296:  } else if (state->coins < getCost(supplyPos)){
        -:  297:    if (DEBUG) 
        -:  298:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
        3:  299:    return -1;
        -:  300:  } else {
    #####:  301:    state->phase=1;
        -:  302:    //state->supplyCount[supplyPos]--;
    #####:  303:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
        -:  304:  
    #####:  305:    state->coins = (state->coins) - (getCost(supplyPos));
    #####:  306:    state->numBuys--;
        -:  307:    if (DEBUG)
        -:  308:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  309:  }
        -:  310:
        -:  311:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  312:  //state->discardCount[who]++;
        -:  313:    
    #####:  314:  return 0;
        -:  315:}
        -:  316:
    #####:  317:int numHandCards(struct gameState *state) {
    #####:  318:  return state->handCount[ whoseTurn(state) ];
        -:  319:}
        -:  320:
    28436:  321:int handCard(int handPos, struct gameState *state) {
    28436:  322:  int currentPlayer = whoseTurn(state);
    28436:  323:  return state->hand[currentPlayer][handPos];
        -:  324:}
        -:  325:
        9:  326:int supplyCount(int card, struct gameState *state) {
        9:  327:  return state->supplyCount[card];
        -:  328:}
        -:  329:
    #####:  330:int fullDeckCount(int player, int card, struct gameState *state) {
        -:  331:  int i;
    #####:  332:  int count = 0;
        -:  333:
    #####:  334:  for (i = 0; i < state->deckCount[player]; i++)
        -:  335:    {
    #####:  336:      if (state->deck[player][i] == card) count++;
        -:  337:    }
        -:  338:
    #####:  339:  for (i = 0; i < state->handCount[player]; i++)
        -:  340:    {
    #####:  341:      if (state->hand[player][i] == card) count++;
        -:  342:    }
        -:  343:
    #####:  344:  for (i = 0; i < state->discardCount[player]; i++)
        -:  345:    {
    #####:  346:      if (state->discard[player][i] == card) count++;
        -:  347:    }
        -:  348:
    #####:  349:  return count;
        -:  350:}
        -:  351:
    56133:  352:int whoseTurn(struct gameState *state) {
    56133:  353:  return state->whoseTurn;
        -:  354:}
        -:  355:
       12:  356:int endTurn(struct gameState *state) {
        -:  357:  int k;
        -:  358:  int i;
       12:  359:  int currentPlayer = whoseTurn(state);
        -:  360:  
        -:  361:  //Discard hand
       66:  362:  for (i = 0; i < state->handCount[currentPlayer]; i++){
       54:  363:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
       54:  364:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  365:  }
       12:  366:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  367:    
        -:  368:  //Code for determining the player
       12:  369:  if (currentPlayer < (state->numPlayers - 1)){ 
        9:  370:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
        -:  371:  }
        -:  372:  else{
        3:  373:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
        -:  374:  }
        -:  375:
       12:  376:  state->outpostPlayed = 0;
       12:  377:  state->phase = 0;
       12:  378:  state->numActions = 1;
       12:  379:  state->coins = 0;
       12:  380:  state->numBuys = 1;
       12:  381:  state->playedCardCount = 0;
       12:  382:  state->handCount[state->whoseTurn] = 0;
        -:  383:
        -:  384:  //int k; move to top
        -:  385:  //Next player draws hand
       72:  386:  for (k = 0; k < 5; k++){
       60:  387:    drawCard(state->whoseTurn, state);//Draw a card
        -:  388:  }
        -:  389:
        -:  390:  //Update money
       12:  391:  updateCoins(state->whoseTurn, state , 0);
        -:  392:
       12:  393:  return 0;
        -:  394:}
        -:  395:
        9:  396:int isGameOver(struct gameState *state) {
        -:  397:  int i;
        -:  398:  int j;
        -:  399:	
        -:  400:  //if stack of Province cards is empty, the game ends
        9:  401:  if (state->supplyCount[province] == 0)
        -:  402:    {
        3:  403:      return 1;
        -:  404:    }
        -:  405:
        -:  406:  //if three supply pile are at 0, the game ends
        6:  407:  j = 0;
      156:  408:  for (i = 0; i < 25; i++)
        -:  409:    {
      150:  410:      if (state->supplyCount[i] == 0)
        -:  411:	{
        9:  412:	  j++;
        -:  413:	}
        -:  414:    }
        6:  415:  if ( j >= 3)
        -:  416:    {
        3:  417:      return 1;
        -:  418:    }
        -:  419:
        3:  420:  return 0;
        -:  421:}
        -:  422:
    #####:  423:int scoreFor (int player, struct gameState *state) {
        -:  424:
        -:  425:  int i;
    #####:  426:  int score = 0;
        -:  427:  //score from hand
    #####:  428:  for (i = 0; i < state->handCount[player]; i++)
        -:  429:    {
    #####:  430:      if (state->hand[player][i] == curse) { score = score - 1; };
    #####:  431:      if (state->hand[player][i] == estate) { score = score + 1; };
    #####:  432:      if (state->hand[player][i] == duchy) { score = score + 3; };
    #####:  433:      if (state->hand[player][i] == province) { score = score + 6; };
    #####:  434:      if (state->hand[player][i] == great_hall) { score = score + 1; };
    #####:  435:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  436:    }
        -:  437:
        -:  438:  //score from discard
    #####:  439:  for (i = 0; i < state->discardCount[player]; i++)
        -:  440:    {
    #####:  441:      if (state->discard[player][i] == curse) { score = score - 1; };
    #####:  442:      if (state->discard[player][i] == estate) { score = score + 1; };
    #####:  443:      if (state->discard[player][i] == duchy) { score = score + 3; };
    #####:  444:      if (state->discard[player][i] == province) { score = score + 6; };
    #####:  445:      if (state->discard[player][i] == great_hall) { score = score + 1; };
    #####:  446:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  447:    }
        -:  448:
        -:  449:  //score from deck
    #####:  450:  for (i = 0; i < state->discardCount[player]; i++)
        -:  451:    {
    #####:  452:      if (state->deck[player][i] == curse) { score = score - 1; };
    #####:  453:      if (state->deck[player][i] == estate) { score = score + 1; };
    #####:  454:      if (state->deck[player][i] == duchy) { score = score + 3; };
    #####:  455:      if (state->deck[player][i] == province) { score = score + 6; };
    #####:  456:      if (state->deck[player][i] == great_hall) { score = score + 1; };
    #####:  457:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  458:    }
        -:  459:
    #####:  460:  return score;
        -:  461:}
        -:  462:
    #####:  463:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
        -:  464:  int i;	
        -:  465:  int j;
        -:  466:  int highScore;
        -:  467:  int currentPlayer;
        -:  468:
        -:  469:  //get score for each player
    #####:  470:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  471:    {
        -:  472:      //set unused player scores to -9999
    #####:  473:      if (i >= state->numPlayers)
        -:  474:	{
    #####:  475:	  players[i] = -9999;
        -:  476:	}
        -:  477:      else
        -:  478:	{
    #####:  479:	  players[i] = scoreFor (i, state);
        -:  480:	}
        -:  481:    }
        -:  482:
        -:  483:  //find highest score
    #####:  484:  j = 0;
    #####:  485:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  486:    {
    #####:  487:      if (players[i] > players[j])
        -:  488:	{
    #####:  489:	  j = i;
        -:  490:	}
        -:  491:    }
    #####:  492:  highScore = players[j];
        -:  493:
        -:  494:  //add 1 to players who had less turns
    #####:  495:  currentPlayer = whoseTurn(state);
    #####:  496:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  497:    {
    #####:  498:      if ( players[i] == highScore && i > currentPlayer )
        -:  499:	{
    #####:  500:	  players[i]++;
        -:  501:	}
        -:  502:    }
        -:  503:
        -:  504:  //find new highest score
    #####:  505:  j = 0;
    #####:  506:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  507:    {
    #####:  508:      if ( players[i] > players[j] )
        -:  509:	{
    #####:  510:	  j = i;
        -:  511:	}
        -:  512:    }
    #####:  513:  highScore = players[j];
        -:  514:
        -:  515:  //set winners in array to 1 and rest to 0
    #####:  516:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  517:    {
    #####:  518:      if ( players[i] == highScore )
        -:  519:	{
    #####:  520:	  players[i] = 1;
        -:  521:	}
        -:  522:      else
        -:  523:	{
    #####:  524:	  players[i] = 0;
        -:  525:	}
        -:  526:    }
        -:  527:
    #####:  528:  return 0;
        -:  529:}
        -:  530:
  4772870:  531:int drawCard(int player, struct gameState *state)
        -:  532:{	int count;
        -:  533:  int deckCounter;
  4772870:  534:  if (state->deckCount[player] <= 0){//Deck is empty
        -:  535:    
        -:  536:    //Step 1 Shuffle the discard pile back into a deck
        -:  537:    int i;
        -:  538:    //Move discard to deck
   159153:  539:    for (i = 0; i < state->discardCount[player];i++){
   155101:  540:      state->deck[player][i] = state->discard[player][i];
   155101:  541:      state->discard[player][i] = -1;
        -:  542:    }
        -:  543:
     4052:  544:    state->deckCount[player] = state->discardCount[player];
     4052:  545:    state->discardCount[player] = 0;//Reset discard
        -:  546:
        -:  547:    //Shufffle the deck
     4052:  548:    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
        -:  549:   
        -:  550:    if (DEBUG){//Debug statements
        -:  551:      printf("Deck count now: %d\n", state->deckCount[player]);
        -:  552:    }
        -:  553:    
     4052:  554:    state->discardCount[player] = 0;
        -:  555:
        -:  556:    //Step 2 Draw Card
     4052:  557:    count = state->handCount[player];//Get current player's hand count
        -:  558:    
        -:  559:    if (DEBUG){//Debug statements
        -:  560:      printf("Current hand count: %d\n", count);
        -:  561:    }
        -:  562:    
     4052:  563:    deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  564:
     4052:  565:    if (deckCounter == 0)
     3490:  566:      return -1;
        -:  567:
      562:  568:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
      562:  569:    state->deckCount[player]--;
      562:  570:    state->handCount[player]++;//Increment hand count
        -:  571:  }
        -:  572:
        -:  573:  else{
  4768818:  574:    int count = state->handCount[player];//Get current hand count for player
        -:  575:    int deckCounter;
        -:  576:    if (DEBUG){//Debug statements
        -:  577:      printf("Current hand count: %d\n", count);
        -:  578:    }
        -:  579:
  4768818:  580:    deckCounter = state->deckCount[player];//Create holder for the deck count
  4768818:  581:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
  4768818:  582:    state->deckCount[player]--;
  4768818:  583:    state->handCount[player]++;//Increment hand count
        -:  584:  }
        -:  585:
  4769380:  586:  return 0;
        -:  587:}
        -:  588:
        3:  589:int getCost(int cardNumber)
        -:  590:{
        3:  591:  switch( cardNumber ) 
        -:  592:    {
        -:  593:    case curse:
    #####:  594:      return 0;
        -:  595:    case estate:
    #####:  596:      return 2;
        -:  597:    case duchy:
    #####:  598:      return 5;
        -:  599:    case province:
    #####:  600:      return 8;
        -:  601:    case copper:
    #####:  602:      return 0;
        -:  603:    case silver:
    #####:  604:      return 3;
        -:  605:    case gold:
    #####:  606:      return 6;
        -:  607:    case adventurer:
        3:  608:      return 6;
        -:  609:    case council_room:
    #####:  610:      return 5;
        -:  611:    case feast:
    #####:  612:      return 4;
        -:  613:    case gardens:
    #####:  614:      return 4;
        -:  615:    case mine:
    #####:  616:      return 5;
        -:  617:    case remodel:
    #####:  618:      return 4;
        -:  619:    case smithy:
    #####:  620:      return 4;
        -:  621:    case village:
    #####:  622:      return 3;
        -:  623:    case baron:
    #####:  624:      return 4;
        -:  625:    case great_hall:
    #####:  626:      return 3;
        -:  627:    case minion:
    #####:  628:      return 5;
        -:  629:    case steward:
    #####:  630:      return 3;
        -:  631:    case tribute:
    #####:  632:      return 5;
        -:  633:    case ambassador:
    #####:  634:      return 3;
        -:  635:    case cutpurse:
    #####:  636:      return 4;
        -:  637:    case embargo: 
    #####:  638:      return 2;
        -:  639:    case outpost:
    #####:  640:      return 5;
        -:  641:    case salvager:
    #####:  642:      return 4;
        -:  643:    case sea_hag:
    #####:  644:      return 4;
        -:  645:    case treasure_map:
    #####:  646:      return 4;
        -:  647:    }
        -:  648:	
    #####:  649:  return -1;
        -:  650:}
        -:  651:
     8002:  652:int playsmithy(int currentPlayer, struct gameState *state, int handPos){
        -:  653:
        -:  654:
        -:  655:      //+3 Cards
        -:  656:      int i;
   208052:  657:      for (i = 0; i < 25; i++)
        -:  658:	{
   200050:  659:	  drawCard(currentPlayer, state);
        -:  660:	}
        -:  661:			
        -:  662:      //discard card from hand
     8002:  663:      discardCard(handPos, currentPlayer, state, 0);
     8002:  664:      return 0;
        -:  665:
        -:  666:}
        -:  667:
    #####:  668:int playsteward(int currentPlayer, struct gameState *state, int choice1, int choice2, int choice3, int handPos){
        -:  669:	
        -:  670:	 
    #####:  671:      if (choice1 == 1)
        -:  672:	{
        -:  673:	  //+2 cards
    #####:  674:	  drawCard(currentPlayer, state);
    #####:  675:	  drawCard(currentPlayer, state);
        -:  676:	}
    #####:  677:      else if (choice1 == 2)
        -:  678:	{
        -:  679:	  //+2 coins
    #####:  680:	  state->coins = state->coins + 30;
        -:  681:	}
        -:  682:      else
        -:  683:	{
        -:  684:	  //trash 2 cards in hand
    #####:  685:	  discardCard(choice2, currentPlayer, state, 1);
    #####:  686:	  discardCard(choice3, currentPlayer, state, 1);
        -:  687:	}
        -:  688:			
        -:  689:      //discard card from hand
    #####:  690:      discardCard(handPos, currentPlayer, state, 0);
    #####:  691:      return 0;
        -:  692:
        -:  693:          
        -:  694:
        -:  695:}
        -:  696:
    #####:  697:int playvillage(int currentPlayer, struct gameState *state, int handPos){
        -:  698:
        -:  699:	
        -:  700:      //+1 Card
    #####:  701:      drawCard(currentPlayer, state);
        -:  702:			
        -:  703:      //+2 Actions
    #####:  704:      state->numActions = state->numActions + 2;
        -:  705:			
        -:  706:      //discard played card from hand
    #####:  707:      discardCard(handPos, currentPlayer, state, 0);
    #####:  708:      return 0;
        -:  709:
        -:  710:}
        -:  711:
    #####:  712:int playcouncilroom(int currentPlayer, struct gameState *state, int handPos){
        -:  713:
        -:  714:	int i;	
        -:  715:      //+4 Cards
    #####:  716:      for (i = 0; i < 4; i++)
        -:  717:	{
    #####:  718:	  drawCard(currentPlayer, state);
        -:  719:	}
        -:  720:			
        -:  721:      //+1 Buy
    #####:  722:      state->numBuys++;
        -:  723:			
        -:  724:      //Each other player draws a card
    #####:  725:      for (i = 0; i < state->numPlayers; i++)
        -:  726:	{
    #####:  727:	  if ( i != currentPlayer )
        -:  728:	    {
    #####:  729:	      drawCard(i, state);
        -:  730:	    }
        -:  731:	}
        -:  732:			
        -:  733:      //put played card in played card pile
    #####:  734:      discardCard(handPos, currentPlayer, state, 0);
        -:  735:			
    #####:  736:      return 0;
        -:  737:
        -:  738:}
        -:  739:
      819:  740:int playgreathall(int currentPlayer, struct gameState *state, int handPos){
        -:  741:
        -:  742:	
        -:  743:      //+1 Card
      819:  744:      drawCard(currentPlayer, state);
        -:  745:			
        -:  746:      //+1 Actions
        -:  747:      //state->numActions++;
        -:  748:			
        -:  749:      //discard card from hand
      819:  750:      discardCard(handPos, currentPlayer, state, 0);
      819:  751:      return 0;
        -:  752:
        -:  753:}
        -:  754:
        -:  755:
        -:  756:
    27685:  757:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
        -:  758:{
        -:  759:  int i;
        -:  760:  int j;
        -:  761:  int k;
        -:  762:  int x;
        -:  763:  int index;
    27685:  764:  int currentPlayer = whoseTurn(state);
    27685:  765:  int nextPlayer = currentPlayer + 1;
        -:  766:
    27685:  767:  int tributeRevealedCards[2] = {-1, -1};
        -:  768:  int temphand[MAX_HAND];// moved above the if statement
    27685:  769:  int drawntreasure=0;
        -:  770:  int cardDrawn;
    27685:  771:  int z = 0;// this is the counter for the temp hand
    27685:  772:  if (nextPlayer > (state->numPlayers - 1)){
        3:  773:    nextPlayer = 0;
        -:  774:  }
        -:  775:  
    27685:  776: if (card == smithy){
        -:  777:
     8002:  778:	playsmithy(currentPlayer, state, handPos);
        -:  779:
        -:  780: }
    19683:  781: else if (card == steward){
        -:  782:	
    #####:  783:	playsteward(currentPlayer, state, choice1, choice2, choice3, handPos);
        -:  784:
        -:  785: }
    19683:  786: else if (card == village){
        -:  787:
    #####:  788:	playvillage(currentPlayer, state, handPos);
        -:  789: }
    19683:  790: else if(card == council_room){
        -:  791:
    #####:  792:	playcouncilroom(currentPlayer, state, handPos);
        -:  793:
        -:  794: }
    19683:  795: else if(card == great_hall){
        -:  796:	
      819:  797:	playgreathall(currentPlayer, state, handPos);
        -:  798:
        -:  799:}
        -:  800:	
        -:  801:  //uses switch to select card and perform actions
    27685:  802:  switch( card ) 
        -:  803:    {
        -:  804:    case adventurer:
  4490172:  805:      while(drawntreasure<2){
  4452456:  806:	if (state->deckCount[currentPlayer] <1){//if the deck is empty we need to shuffle discard and add to deck
     3607:  807:	  shuffle(currentPlayer, state);
        -:  808:	}
  4452456:  809:	drawCard(currentPlayer, state);
  4452456:  810:	cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
  4452456:  811:	if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
    37716:  812:	  drawntreasure++;
        -:  813:	else{
  4414740:  814:	  temphand[z]=cardDrawn;
  4414740:  815:	  state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
  4414740:  816:	  z++;
        -:  817:	}
        -:  818:      }
  4443330:  819:      while(z-1>=0){
  4405614:  820:	state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
  4405614:  821:	z=z-1;
        -:  822:      }
    18858:  823:      return 0;
        -:  824:			
        -:  825:   /* case council_room:
        -:  826:      //+4 Cards
        -:  827:      for (i = 0; i < 4; i++)
        -:  828:	{
        -:  829:	  drawCard(currentPlayer, state);
        -:  830:	}
        -:  831:			
        -:  832:      //+1 Buy
        -:  833:      state->numBuys++;
        -:  834:			
        -:  835:      //Each other player draws a card
        -:  836:      for (i = 0; i < state->numPlayers; i++)
        -:  837:	{
        -:  838:	  if ( i != currentPlayer )
        -:  839:	    {
        -:  840:	      drawCard(i, state);
        -:  841:	    }
        -:  842:	}
        -:  843:			
        -:  844:      //put played card in played card pile
        -:  845:      discardCard(handPos, currentPlayer, state, 0);
        -:  846:			
        -:  847:      return 0;
        -:  848:*/			
        -:  849:    case feast:
        -:  850:      //gain card with cost up to 5
        -:  851:      //Backup hand
    #####:  852:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  853:	temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  854:	state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  855:      }
        -:  856:      //Backup hand
        -:  857:
        -:  858:      //Update Coins for Buy
    #####:  859:      updateCoins(currentPlayer, state, 5);
    #####:  860:      x = 1;//Condition to loop on
    #####:  861:      while( x == 1) {//Buy one card
    #####:  862:	if (supplyCount(choice1, state) <= 0){
        -:  863:	  if (DEBUG)
        -:  864:	    printf("None of that card left, sorry!\n");
        -:  865:
        -:  866:	  if (DEBUG){
        -:  867:	    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  868:	  }
        -:  869:	}
    #####:  870:	else if (state->coins < getCost(choice1)){
    #####:  871:	  printf("That card is too expensive!\n");
        -:  872:
        -:  873:	  if (DEBUG){
        -:  874:	    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  875:	  }
        -:  876:	}
        -:  877:	else{
        -:  878:
        -:  879:	  if (DEBUG){
        -:  880:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  881:	  }
        -:  882:
    #####:  883:	  gainCard(choice1, state, 0, currentPlayer);//Gain the card
    #####:  884:	  x = 0;//No more buying cards
        -:  885:
        -:  886:	  if (DEBUG){
        -:  887:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  888:	  }
        -:  889:
        -:  890:	}
        -:  891:      }     
        -:  892:
        -:  893:      //Reset Hand
    #####:  894:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  895:	state->hand[currentPlayer][i] = temphand[i];
    #####:  896:	temphand[i] = -1;
        -:  897:      }
        -:  898:      //Reset Hand
        -:  899:      			
    #####:  900:      return 0;
        -:  901:			
        -:  902:    case gardens:
    #####:  903:      return -1;
        -:  904:			
        -:  905:    case mine:
    #####:  906:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  907:
    #####:  908:      if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold)
        -:  909:	{
    #####:  910:	  return -1;
        -:  911:	}
        -:  912:		
    #####:  913:      if (choice2 > treasure_map || choice2 < curse)
        -:  914:	{
    #####:  915:	  return -1;
        -:  916:	}
        -:  917:
    #####:  918:      if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) )
        -:  919:	{
    #####:  920:	  return -1;
        -:  921:	}
        -:  922:
    #####:  923:      gainCard(choice2, state, 2, currentPlayer);
        -:  924:
        -:  925:      //discard card from hand
    #####:  926:      discardCard(handPos, currentPlayer, state, 0);
        -:  927:
        -:  928:      //discard trashed card
    #####:  929:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -:  930:	{
    #####:  931:	  if (state->hand[currentPlayer][i] == j)
        -:  932:	    {
    #####:  933:	      discardCard(i, currentPlayer, state, 0);			
    #####:  934:	      break;
        -:  935:	    }
        -:  936:	}
        -:  937:			
    #####:  938:      return 0;
        -:  939:			
        -:  940:    case remodel:
    #####:  941:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  942:
    #####:  943:      if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
        -:  944:	{
    #####:  945:	  return -1;
        -:  946:	}
        -:  947:
    #####:  948:      gainCard(choice2, state, 0, currentPlayer);
        -:  949:
        -:  950:      //discard card from hand
    #####:  951:      discardCard(handPos, currentPlayer, state, 0);
        -:  952:
        -:  953:      //discard trashed card
    #####:  954:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -:  955:	{
    #####:  956:	  if (state->hand[currentPlayer][i] == j)
        -:  957:	    {
    #####:  958:	      discardCard(i, currentPlayer, state, 0);			
    #####:  959:	      break;
        -:  960:	    }
        -:  961:	}
        -:  962:
        -:  963:
    #####:  964:      return 0;
        -:  965:		
        -:  966:/*    case smithy:
        -:  967:      //+3 Cards
        -:  968:      for (i = 0; i < 3; i++)
        -:  969:	{
        -:  970:	  drawCard(currentPlayer, state);
        -:  971:	}
        -:  972:			
        -:  973:      //discard card from hand
        -:  974:      discardCard(handPos, currentPlayer, state, 0);
        -:  975:      return 0;
        -:  976:	*/	
        -:  977:/*    case village:
        -:  978:      //+1 Card
        -:  979:      drawCard(currentPlayer, state);
        -:  980:			
        -:  981:      //+2 Actions
        -:  982:      state->numActions = state->numActions + 2;
        -:  983:			
        -:  984:      //discard played card from hand
        -:  985:      discardCard(handPos, currentPlayer, state, 0);
        -:  986:      return 0;
        -:  987:*/		
        -:  988:    case baron:
    #####:  989:      state->numBuys++;//Increase buys by 1!
    #####:  990:      if (choice1 > 0){//Boolean true or going to discard an estate
    #####:  991:	int p = 0;//Iterator for hand!
    #####:  992:	int card_not_discarded = 1;//Flag for discard set!
    #####:  993:	while(card_not_discarded){
    #####:  994:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
    #####:  995:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  996:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  997:	    state->discardCount[currentPlayer]++;
    #####:  998:	    for (;p < state->handCount[currentPlayer]; p++){
    #####:  999:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -: 1000:	    }
    #####: 1001:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####: 1002:	    state->handCount[currentPlayer]--;
    #####: 1003:	    card_not_discarded = 0;//Exit the loop
        -: 1004:	  }
    #####: 1005:	  else if (p > state->handCount[currentPlayer]){
        -: 1006:	    if(DEBUG) {
        -: 1007:	      printf("No estate cards in your hand, invalid choice\n");
        -: 1008:	      printf("Must gain an estate if there are any\n");
        -: 1009:	    }
    #####: 1010:	    if (supplyCount(estate, state) > 0){
    #####: 1011:	      gainCard(estate, state, 0, currentPlayer);
    #####: 1012:	      state->supplyCount[estate]--;//Decrement estates
    #####: 1013:	      if (supplyCount(estate, state) == 0){
    #####: 1014:		isGameOver(state);
        -: 1015:	      }
        -: 1016:	    }
    #####: 1017:	    card_not_discarded = 0;//Exit the loop
        -: 1018:	  }
        -: 1019:			    
        -: 1020:	  else{
    #####: 1021:	    p++;//Next card
        -: 1022:	  }
        -: 1023:	}
        -: 1024:      }
        -: 1025:			    
        -: 1026:      else{
    #####: 1027:	if (supplyCount(estate, state) > 0){
    #####: 1028:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
    #####: 1029:	  state->supplyCount[estate]--;//Decrement Estates
    #####: 1030:	  if (supplyCount(estate, state) == 0){
    #####: 1031:	    isGameOver(state);
        -: 1032:	  }
        -: 1033:	}
        -: 1034:      }
        -: 1035:	    
        -: 1036:      
    #####: 1037:      return 0;
        -: 1038:		
        -: 1039:/*    case great_hall:
        -: 1040:      //+1 Card
        -: 1041:      drawCard(currentPlayer, state);
        -: 1042:			
        -: 1043:      //+1 Actions
        -: 1044:      state->numActions++;
        -: 1045:			
        -: 1046:      //discard card from hand
        -: 1047:      discardCard(handPos, currentPlayer, state, 0);
        -: 1048:      return 0;
        -: 1049:*/		
        -: 1050:    case minion:
        -: 1051:      //+1 action
    #####: 1052:      state->numActions++;
        -: 1053:			
        -: 1054:      //discard card from hand
    #####: 1055:      discardCard(handPos, currentPlayer, state, 0);
        -: 1056:			
    #####: 1057:      if (choice1)		//+2 coins
        -: 1058:	{
    #####: 1059:	  state->coins = state->coins + 2;
        -: 1060:	}
        -: 1061:			
    #####: 1062:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
        -: 1063:	{
        -: 1064:	  //discard hand
    #####: 1065:	  while(numHandCards(state) > 0)
        -: 1066:	    {
    #####: 1067:	      discardCard(handPos, currentPlayer, state, 0);
        -: 1068:	    }
        -: 1069:				
        -: 1070:	  //draw 4
    #####: 1071:	  for (i = 0; i < 4; i++)
        -: 1072:	    {
    #####: 1073:	      drawCard(currentPlayer, state);
        -: 1074:	    }
        -: 1075:				
        -: 1076:	  //other players discard hand and redraw if hand size > 4
    #####: 1077:	  for (i = 0; i < state->numPlayers; i++)
        -: 1078:	    {
    #####: 1079:	      if (i != currentPlayer)
        -: 1080:		{
    #####: 1081:		  if ( state->handCount[i] > 4 )
        -: 1082:		    {
        -: 1083:		      //discard hand
    #####: 1084:		      while( state->handCount[i] > 0 )
        -: 1085:			{
    #####: 1086:			  discardCard(handPos, i, state, 0);
        -: 1087:			}
        -: 1088:							
        -: 1089:		      //draw 4
    #####: 1090:		      for (j = 0; j < 4; j++)
        -: 1091:			{
    #####: 1092:			  drawCard(i, state);
        -: 1093:			}
        -: 1094:		    }
        -: 1095:		}
        -: 1096:	    }
        -: 1097:				
        -: 1098:	}
    #####: 1099:      return 0;
        -: 1100:		
        -: 1101:/*    case steward:
        -: 1102:      if (choice1 == 1)
        -: 1103:	{
        -: 1104:	  //+2 cards
        -: 1105:	  drawCard(currentPlayer, state);
        -: 1106:	  drawCard(currentPlayer, state);
        -: 1107:	}
        -: 1108:      else if (choice1 == 2)
        -: 1109:	{
        -: 1110:	  //+2 coins
        -: 1111:	  state->coins = state->coins + 2;
        -: 1112:	}
        -: 1113:      else
        -: 1114:	{
        -: 1115:	  //trash 2 cards in hand
        -: 1116:	  discardCard(choice2, currentPlayer, state, 1);
        -: 1117:	  discardCard(choice3, currentPlayer, state, 1);
        -: 1118:	}
        -: 1119:			
        -: 1120:      //discard card from hand
        -: 1121:      discardCard(handPos, currentPlayer, state, 0);
        -: 1122:      return 0;
        -: 1123:*/	
        -: 1124:    case tribute:
    #####: 1125:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
    #####: 1126:	if (state->deckCount[nextPlayer] > 0){
    #####: 1127:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1128:	  state->deckCount[nextPlayer]--;
        -: 1129:	}
    #####: 1130:	else if (state->discardCount[nextPlayer] > 0){
    #####: 1131:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1132:	  state->discardCount[nextPlayer]--;
        -: 1133:	}
        -: 1134:	else{
        -: 1135:	  //No Card to Reveal
        -: 1136:	  if (DEBUG){
        -: 1137:	    printf("No cards to reveal\n");
        -: 1138:	  }
        -: 1139:	}
        -: 1140:      }
        -: 1141:	    
        -: 1142:      else{
    #####: 1143:	if (state->deckCount[nextPlayer] == 0){
    #####: 1144:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
    #####: 1145:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1146:	    state->deckCount[nextPlayer]++;
    #####: 1147:	    state->discard[nextPlayer][i] = -1;
    #####: 1148:	    state->discardCount[nextPlayer]--;
        -: 1149:	  }
        -: 1150:			    
    #####: 1151:	  shuffle(nextPlayer,state);//Shuffle the deck
        -: 1152:	} 
    #####: 1153:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1154:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1155:	state->deckCount[nextPlayer]--;
    #####: 1156:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1157:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1158:	state->deckCount[nextPlayer]--;
        -: 1159:      }    
        -: 1160:		       
    #####: 1161:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one 
    #####: 1162:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1163:	state->playedCardCount++;
    #####: 1164:	tributeRevealedCards[1] = -1;
        -: 1165:      }
        -: 1166:
    #####: 1167:      for (i = 0; i <= 2; i ++){
    #####: 1168:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
    #####: 1169:	  state->coins += 2;
        -: 1170:	}
        -: 1171:		    
    #####: 1172:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
    #####: 1173:	  drawCard(currentPlayer, state);
    #####: 1174:	  drawCard(currentPlayer, state);
        -: 1175:	}
        -: 1176:	else{//Action Card
    #####: 1177:	  state->numActions = state->numActions + 2;
        -: 1178:	}
        -: 1179:      }
        -: 1180:	    
    #####: 1181:      return 0;
        -: 1182:		
        -: 1183:    case ambassador:
    #####: 1184:      j = 0;		//used to check if player has enough cards to discard
        -: 1185:
    #####: 1186:      if (choice2 > 2 || choice2 < 0)
        -: 1187:	{
    #####: 1188:	  return -1;				
        -: 1189:	}
        -: 1190:
    #####: 1191:      if (choice1 == handPos)
        -: 1192:	{
    #####: 1193:	  return -1;
        -: 1194:	}
        -: 1195:
    #####: 1196:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1197:	{
    #####: 1198:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
        -: 1199:	    {
    #####: 1200:	      j++;
        -: 1201:	    }
        -: 1202:	}
    #####: 1203:      if (j < choice2)
        -: 1204:	{
    #####: 1205:	  return -1;				
        -: 1206:	}
        -: 1207:
        -: 1208:      if (DEBUG) 
        -: 1209:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1210:
        -: 1211:      //increase supply count for choosen card by amount being discarded
    #####: 1212:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1213:			
        -: 1214:      //each other player gains a copy of revealed card
    #####: 1215:      for (i = 0; i < state->numPlayers; i++)
        -: 1216:	{
    #####: 1217:	  if (i != currentPlayer)
        -: 1218:	    {
    #####: 1219:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
        -: 1220:	    }
        -: 1221:	}
        -: 1222:
        -: 1223:      //discard played card from hand
    #####: 1224:      discardCard(handPos, currentPlayer, state, 0);			
        -: 1225:
        -: 1226:      //trash copies of cards returned to supply
    #####: 1227:      for (j = 0; j < choice2; j++)
        -: 1228:	{
    #####: 1229:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1230:	    {
    #####: 1231:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
        -: 1232:		{
    #####: 1233:		  discardCard(i, currentPlayer, state, 1);
    #####: 1234:		  break;
        -: 1235:		}
        -: 1236:	    }
        -: 1237:	}			
        -: 1238:
    #####: 1239:      return 0;
        -: 1240:		
        -: 1241:    case cutpurse:
        -: 1242:
    #####: 1243:      updateCoins(currentPlayer, state, 2);
    #####: 1244:      for (i = 0; i < state->numPlayers; i++)
        -: 1245:	{
    #####: 1246:	  if (i != currentPlayer)
        -: 1247:	    {
    #####: 1248:	      for (j = 0; j < state->handCount[i]; j++)
        -: 1249:		{
    #####: 1250:		  if (state->hand[i][j] == copper)
        -: 1251:		    {
    #####: 1252:		      discardCard(j, i, state, 0);
    #####: 1253:		      break;
        -: 1254:		    }
    #####: 1255:		  if (j == state->handCount[i])
        -: 1256:		    {
    #####: 1257:		      for (k = 0; k < state->handCount[i]; k++)
        -: 1258:			{
        -: 1259:			  if (DEBUG)
        -: 1260:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1261:			}	
    #####: 1262:		      break;
        -: 1263:		    }		
        -: 1264:		}
        -: 1265:					
        -: 1266:	    }
        -: 1267:				
        -: 1268:	}				
        -: 1269:
        -: 1270:      //discard played card from hand
    #####: 1271:      discardCard(handPos, currentPlayer, state, 0);			
        -: 1272:
    #####: 1273:      return 0;
        -: 1274:
        -: 1275:		
        -: 1276:    case embargo: 
        -: 1277:      //+2 Coins
        3: 1278:      state->coins = state->coins + 2;
        -: 1279:			
        -: 1280:      //see if selected pile is in play
        3: 1281:      if ( state->supplyCount[choice1] == -1 )
        -: 1282:	{
    #####: 1283:	  return -1;
        -: 1284:	}
        -: 1285:			
        -: 1286:      //add embargo token to selected supply pile
        3: 1287:      state->embargoTokens[choice1]++;
        -: 1288:			
        -: 1289:      //trash card
        3: 1290:      discardCard(handPos, currentPlayer, state, 1);		
        3: 1291:      return 0;
        -: 1292:		
        -: 1293:    case outpost:
        -: 1294:      //set outpost flag
        3: 1295:      state->outpostPlayed++;
        -: 1296:			
        -: 1297:      //discard card
        3: 1298:      discardCard(handPos, currentPlayer, state, 0);
        3: 1299:      return 0;
        -: 1300:		
        -: 1301:    case salvager:
        -: 1302:      //+1 buy
    #####: 1303:      state->numBuys++;
        -: 1304:			
    #####: 1305:      if (choice1)
        -: 1306:	{
        -: 1307:	  //gain coins equal to trashed card
    #####: 1308:	  state->coins = state->coins + getCost( handCard(choice1, state) );
        -: 1309:	  //trash card
    #####: 1310:	  discardCard(choice1, currentPlayer, state, 1);	
        -: 1311:	}
        -: 1312:			
        -: 1313:      //discard card
    #####: 1314:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1315:      return 0;
        -: 1316:		
        -: 1317:    case sea_hag:
    #####: 1318:      for (i = 0; i < state->numPlayers; i++){
    #####: 1319:	if (i != currentPlayer){
    #####: 1320:	  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1321:	  state->discardCount[i]++;
    #####: 1322:	  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
        -: 1323:	}
        -: 1324:      }
    #####: 1325:      return 0;
        -: 1326:		
        -: 1327:    case treasure_map:
        -: 1328:      //search hand for another treasure_map
    #####: 1329:      index = -1;
    #####: 1330:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1331:	{
    #####: 1332:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
        -: 1333:	    {
    #####: 1334:	      index = i;
    #####: 1335:	      break;
        -: 1336:	    }
        -: 1337:	}
    #####: 1338:      if (index > -1)
        -: 1339:	{
        -: 1340:	  //trash both treasure cards
    #####: 1341:	  discardCard(handPos, currentPlayer, state, 1);
    #####: 1342:	  discardCard(index, currentPlayer, state, 1);
        -: 1343:
        -: 1344:	  //gain 4 Gold cards
    #####: 1345:	  for (i = 0; i < 4; i++)
        -: 1346:	    {
    #####: 1347:	      gainCard(gold, state, 1, currentPlayer);
        -: 1348:	    }
        -: 1349:				
        -: 1350:	  //return success
    #####: 1351:	  return 1;
        -: 1352:	}
        -: 1353:			
        -: 1354:      //no second treasure_map found in hand
    #####: 1355:      return -1;
        -: 1356:    }
        -: 1357:	
     8821: 1358:  return -1;
        -: 1359:}
        -: 1360:
     8827: 1361:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
        -: 1362:{
        -: 1363:	
        -: 1364:  //if card is not trashed, added to Played pile 
     8827: 1365:  if (trashFlag < 1)
        -: 1366:    {
        -: 1367:      //add card to played pile
     8824: 1368:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos]; 
     8824: 1369:      state->playedCardCount++;
        -: 1370:    }
        -: 1371:	
        -: 1372:  //set played card to -1
     8827: 1373:  state->hand[currentPlayer][handPos] = -1;
        -: 1374:	
        -: 1375:  //remove card from player's hand
     8827: 1376:  if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
        -: 1377:    {
        -: 1378:      //reduce number of cards in hand
        1: 1379:      state->handCount[currentPlayer]--;
        -: 1380:    }
     8826: 1381:  else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
        -: 1382:    {
        -: 1383:      //reduce number of cards in hand
    #####: 1384:      state->handCount[currentPlayer]--;
        -: 1385:    }
        -: 1386:  else 	
        -: 1387:    {
        -: 1388:      //replace discarded card with last card in hand
     8826: 1389:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1390:      //set last card to -1
     8826: 1391:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1392:      //reduce number of cards in hand
     8826: 1393:      state->handCount[currentPlayer]--;
        -: 1394:    }
        -: 1395:	
     8827: 1396:  return 0;
        -: 1397:}
        -: 1398:
        6: 1399:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
        -: 1400:{
        -: 1401:  //Note: supplyPos is enum of choosen card
        -: 1402:	
        -: 1403:  //check if supply pile is empty (0) or card is not used in game (-1)
        6: 1404:  if ( supplyCount(supplyPos, state) < 1 )
        -: 1405:    {
    #####: 1406:      return -1;
        -: 1407:    }
        -: 1408:	
        -: 1409:  //added card for [whoseTurn] current player:
        -: 1410:  // toFlag = 0 : add to discard
        -: 1411:  // toFlag = 1 : add to deck
        -: 1412:  // toFlag = 2 : add to hand
        -: 1413:
        6: 1414:  if (toFlag == 1)
        -: 1415:    {
        3: 1416:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
        3: 1417:      state->deckCount[player]++;
        -: 1418:    }
        3: 1419:  else if (toFlag == 2)
        -: 1420:    {
        3: 1421:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
        3: 1422:      state->handCount[player]++;
        -: 1423:    }
        -: 1424:  else
        -: 1425:    {
    #####: 1426:      state->discard[player][ state->discardCount[player] ] = supplyPos;
    #####: 1427:      state->discardCount[player]++;
        -: 1428:    }
        -: 1429:	
        -: 1430:  //decrease number in supply pile
        6: 1431:  state->supplyCount[supplyPos]--;
        -: 1432:	 
        6: 1433:  return 0;
        -: 1434:}
        -: 1435:
    40773: 1436:int updateCoins(int player, struct gameState *state, int bonus)
        -: 1437:{
        -: 1438:  int i;
        -: 1439:	
        -: 1440:  //reset coin count
    40773: 1441:  state->coins = 0;
        -: 1442:
        -: 1443:  //add coins for each Treasure card in player's hand
  4331699: 1444:  for (i = 0; i < state->handCount[player]; i++)
        -: 1445:    {
  4290926: 1446:      if (state->hand[player][i] == copper)
        -: 1447:	{
  2400914: 1448:	  state->coins += 1;
        -: 1449:	}
  1890012: 1450:      else if (state->hand[player][i] == silver)
        -: 1451:	{
    #####: 1452:	  state->coins += 2;
        -: 1453:	}
  1890012: 1454:      else if (state->hand[player][i] == gold)
        -: 1455:	{
    #####: 1456:	  state->coins += 3;
        -: 1457:	}	
        -: 1458:    }	
        -: 1459:
        -: 1460:  //add bonus
    40773: 1461:  state->coins += bonus;
        -: 1462:
    40773: 1463:  return 0;
        -: 1464:}
        -: 1465:
        -: 1466:
        -: 1467://end of dominion.c
        -: 1468:
